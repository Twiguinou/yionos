package vulkan;

public final class VkDevice
{
    public final java.lang.foreign.MemorySegment handle;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyDevice;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyDevice;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceQueue;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceQueue;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDeviceWaitIdle;
    public final java.lang.invoke.MethodHandle MTD__vkDeviceWaitIdle;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkAllocateMemory;
    public final java.lang.invoke.MethodHandle MTD__vkAllocateMemory;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkFreeMemory;
    public final java.lang.invoke.MethodHandle MTD__vkFreeMemory;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkMapMemory;
    public final java.lang.invoke.MethodHandle MTD__vkMapMemory;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkUnmapMemory;
    public final java.lang.invoke.MethodHandle MTD__vkUnmapMemory;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkFlushMappedMemoryRanges;
    public final java.lang.invoke.MethodHandle MTD__vkFlushMappedMemoryRanges;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkInvalidateMappedMemoryRanges;
    public final java.lang.invoke.MethodHandle MTD__vkInvalidateMappedMemoryRanges;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceMemoryCommitment;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceMemoryCommitment;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkBindBufferMemory;
    public final java.lang.invoke.MethodHandle MTD__vkBindBufferMemory;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkBindImageMemory;
    public final java.lang.invoke.MethodHandle MTD__vkBindImageMemory;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetBufferMemoryRequirements;
    public final java.lang.invoke.MethodHandle MTD__vkGetBufferMemoryRequirements;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetImageMemoryRequirements;
    public final java.lang.invoke.MethodHandle MTD__vkGetImageMemoryRequirements;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetImageSparseMemoryRequirements;
    public final java.lang.invoke.MethodHandle MTD__vkGetImageSparseMemoryRequirements;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateFence;
    public final java.lang.invoke.MethodHandle MTD__vkCreateFence;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyFence;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyFence;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkResetFences;
    public final java.lang.invoke.MethodHandle MTD__vkResetFences;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetFenceStatus;
    public final java.lang.invoke.MethodHandle MTD__vkGetFenceStatus;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkWaitForFences;
    public final java.lang.invoke.MethodHandle MTD__vkWaitForFences;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateSemaphore;
    public final java.lang.invoke.MethodHandle MTD__vkCreateSemaphore;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroySemaphore;
    public final java.lang.invoke.MethodHandle MTD__vkDestroySemaphore;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateEvent;
    public final java.lang.invoke.MethodHandle MTD__vkCreateEvent;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyEvent;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyEvent;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetEventStatus;
    public final java.lang.invoke.MethodHandle MTD__vkGetEventStatus;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkSetEvent;
    public final java.lang.invoke.MethodHandle MTD__vkSetEvent;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkResetEvent;
    public final java.lang.invoke.MethodHandle MTD__vkResetEvent;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateQueryPool;
    public final java.lang.invoke.MethodHandle MTD__vkCreateQueryPool;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyQueryPool;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyQueryPool;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetQueryPoolResults;
    public final java.lang.invoke.MethodHandle MTD__vkGetQueryPoolResults;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateBuffer;
    public final java.lang.invoke.MethodHandle MTD__vkCreateBuffer;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyBuffer;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyBuffer;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateBufferView;
    public final java.lang.invoke.MethodHandle MTD__vkCreateBufferView;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyBufferView;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyBufferView;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateImage;
    public final java.lang.invoke.MethodHandle MTD__vkCreateImage;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyImage;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyImage;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetImageSubresourceLayout;
    public final java.lang.invoke.MethodHandle MTD__vkGetImageSubresourceLayout;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateImageView;
    public final java.lang.invoke.MethodHandle MTD__vkCreateImageView;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyImageView;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyImageView;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateShaderModule;
    public final java.lang.invoke.MethodHandle MTD__vkCreateShaderModule;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyShaderModule;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyShaderModule;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreatePipelineCache;
    public final java.lang.invoke.MethodHandle MTD__vkCreatePipelineCache;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyPipelineCache;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyPipelineCache;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetPipelineCacheData;
    public final java.lang.invoke.MethodHandle MTD__vkGetPipelineCacheData;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkMergePipelineCaches;
    public final java.lang.invoke.MethodHandle MTD__vkMergePipelineCaches;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateGraphicsPipelines;
    public final java.lang.invoke.MethodHandle MTD__vkCreateGraphicsPipelines;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateComputePipelines;
    public final java.lang.invoke.MethodHandle MTD__vkCreateComputePipelines;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyPipeline;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyPipeline;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreatePipelineLayout;
    public final java.lang.invoke.MethodHandle MTD__vkCreatePipelineLayout;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyPipelineLayout;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyPipelineLayout;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateSampler;
    public final java.lang.invoke.MethodHandle MTD__vkCreateSampler;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroySampler;
    public final java.lang.invoke.MethodHandle MTD__vkDestroySampler;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateDescriptorSetLayout;
    public final java.lang.invoke.MethodHandle MTD__vkCreateDescriptorSetLayout;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyDescriptorSetLayout;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyDescriptorSetLayout;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateDescriptorPool;
    public final java.lang.invoke.MethodHandle MTD__vkCreateDescriptorPool;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyDescriptorPool;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyDescriptorPool;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkResetDescriptorPool;
    public final java.lang.invoke.MethodHandle MTD__vkResetDescriptorPool;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkAllocateDescriptorSets;
    public final java.lang.invoke.MethodHandle MTD__vkAllocateDescriptorSets;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkFreeDescriptorSets;
    public final java.lang.invoke.MethodHandle MTD__vkFreeDescriptorSets;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkUpdateDescriptorSets;
    public final java.lang.invoke.MethodHandle MTD__vkUpdateDescriptorSets;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateFramebuffer;
    public final java.lang.invoke.MethodHandle MTD__vkCreateFramebuffer;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyFramebuffer;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyFramebuffer;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateRenderPass;
    public final java.lang.invoke.MethodHandle MTD__vkCreateRenderPass;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyRenderPass;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyRenderPass;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetRenderAreaGranularity;
    public final java.lang.invoke.MethodHandle MTD__vkGetRenderAreaGranularity;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateCommandPool;
    public final java.lang.invoke.MethodHandle MTD__vkCreateCommandPool;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyCommandPool;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyCommandPool;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkResetCommandPool;
    public final java.lang.invoke.MethodHandle MTD__vkResetCommandPool;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkAllocateCommandBuffers;
    public final java.lang.invoke.MethodHandle MTD__vkAllocateCommandBuffers;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkFreeCommandBuffers;
    public final java.lang.invoke.MethodHandle MTD__vkFreeCommandBuffers;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkBindBufferMemory2;
    public final java.lang.invoke.MethodHandle MTD__vkBindBufferMemory2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkBindImageMemory2;
    public final java.lang.invoke.MethodHandle MTD__vkBindImageMemory2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceGroupPeerMemoryFeatures;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceGroupPeerMemoryFeatures;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetImageMemoryRequirements2;
    public final java.lang.invoke.MethodHandle MTD__vkGetImageMemoryRequirements2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetBufferMemoryRequirements2;
    public final java.lang.invoke.MethodHandle MTD__vkGetBufferMemoryRequirements2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetImageSparseMemoryRequirements2;
    public final java.lang.invoke.MethodHandle MTD__vkGetImageSparseMemoryRequirements2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkTrimCommandPool;
    public final java.lang.invoke.MethodHandle MTD__vkTrimCommandPool;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceQueue2;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceQueue2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateSamplerYcbcrConversion;
    public final java.lang.invoke.MethodHandle MTD__vkCreateSamplerYcbcrConversion;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroySamplerYcbcrConversion;
    public final java.lang.invoke.MethodHandle MTD__vkDestroySamplerYcbcrConversion;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateDescriptorUpdateTemplate;
    public final java.lang.invoke.MethodHandle MTD__vkCreateDescriptorUpdateTemplate;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyDescriptorUpdateTemplate;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyDescriptorUpdateTemplate;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkUpdateDescriptorSetWithTemplate;
    public final java.lang.invoke.MethodHandle MTD__vkUpdateDescriptorSetWithTemplate;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDescriptorSetLayoutSupport;
    public final java.lang.invoke.MethodHandle MTD__vkGetDescriptorSetLayoutSupport;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateRenderPass2;
    public final java.lang.invoke.MethodHandle MTD__vkCreateRenderPass2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkResetQueryPool;
    public final java.lang.invoke.MethodHandle MTD__vkResetQueryPool;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetSemaphoreCounterValue;
    public final java.lang.invoke.MethodHandle MTD__vkGetSemaphoreCounterValue;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkWaitSemaphores;
    public final java.lang.invoke.MethodHandle MTD__vkWaitSemaphores;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkSignalSemaphore;
    public final java.lang.invoke.MethodHandle MTD__vkSignalSemaphore;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetBufferDeviceAddress;
    public final java.lang.invoke.MethodHandle MTD__vkGetBufferDeviceAddress;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetBufferOpaqueCaptureAddress;
    public final java.lang.invoke.MethodHandle MTD__vkGetBufferOpaqueCaptureAddress;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceMemoryOpaqueCaptureAddress;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceMemoryOpaqueCaptureAddress;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreatePrivateDataSlot;
    public final java.lang.invoke.MethodHandle MTD__vkCreatePrivateDataSlot;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyPrivateDataSlot;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyPrivateDataSlot;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkSetPrivateData;
    public final java.lang.invoke.MethodHandle MTD__vkSetPrivateData;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetPrivateData;
    public final java.lang.invoke.MethodHandle MTD__vkGetPrivateData;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceBufferMemoryRequirements;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceBufferMemoryRequirements;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceImageMemoryRequirements;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceImageMemoryRequirements;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceImageSparseMemoryRequirements;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceImageSparseMemoryRequirements;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateSwapchainKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCreateSwapchainKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroySwapchainKHR;
    public final java.lang.invoke.MethodHandle MTD__vkDestroySwapchainKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetSwapchainImagesKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetSwapchainImagesKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkAcquireNextImageKHR;
    public final java.lang.invoke.MethodHandle MTD__vkAcquireNextImageKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceGroupPresentCapabilitiesKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceGroupPresentCapabilitiesKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceGroupSurfacePresentModesKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceGroupSurfacePresentModesKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkAcquireNextImage2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkAcquireNextImage2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateSharedSwapchainsKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCreateSharedSwapchainsKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateVideoSessionKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCreateVideoSessionKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyVideoSessionKHR;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyVideoSessionKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetVideoSessionMemoryRequirementsKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetVideoSessionMemoryRequirementsKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkBindVideoSessionMemoryKHR;
    public final java.lang.invoke.MethodHandle MTD__vkBindVideoSessionMemoryKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateVideoSessionParametersKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCreateVideoSessionParametersKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkUpdateVideoSessionParametersKHR;
    public final java.lang.invoke.MethodHandle MTD__vkUpdateVideoSessionParametersKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyVideoSessionParametersKHR;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyVideoSessionParametersKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceGroupPeerMemoryFeaturesKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceGroupPeerMemoryFeaturesKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkTrimCommandPoolKHR;
    public final java.lang.invoke.MethodHandle MTD__vkTrimCommandPoolKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetMemoryFdKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetMemoryFdKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetMemoryFdPropertiesKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetMemoryFdPropertiesKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkImportSemaphoreFdKHR;
    public final java.lang.invoke.MethodHandle MTD__vkImportSemaphoreFdKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetSemaphoreFdKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetSemaphoreFdKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateDescriptorUpdateTemplateKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCreateDescriptorUpdateTemplateKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyDescriptorUpdateTemplateKHR;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyDescriptorUpdateTemplateKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkUpdateDescriptorSetWithTemplateKHR;
    public final java.lang.invoke.MethodHandle MTD__vkUpdateDescriptorSetWithTemplateKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateRenderPass2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCreateRenderPass2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetSwapchainStatusKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetSwapchainStatusKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkImportFenceFdKHR;
    public final java.lang.invoke.MethodHandle MTD__vkImportFenceFdKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetFenceFdKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetFenceFdKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkAcquireProfilingLockKHR;
    public final java.lang.invoke.MethodHandle MTD__vkAcquireProfilingLockKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkReleaseProfilingLockKHR;
    public final java.lang.invoke.MethodHandle MTD__vkReleaseProfilingLockKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetImageMemoryRequirements2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetImageMemoryRequirements2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetBufferMemoryRequirements2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetBufferMemoryRequirements2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetImageSparseMemoryRequirements2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetImageSparseMemoryRequirements2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateSamplerYcbcrConversionKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCreateSamplerYcbcrConversionKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroySamplerYcbcrConversionKHR;
    public final java.lang.invoke.MethodHandle MTD__vkDestroySamplerYcbcrConversionKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkBindBufferMemory2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkBindBufferMemory2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkBindImageMemory2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkBindImageMemory2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDescriptorSetLayoutSupportKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetDescriptorSetLayoutSupportKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetSemaphoreCounterValueKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetSemaphoreCounterValueKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkWaitSemaphoresKHR;
    public final java.lang.invoke.MethodHandle MTD__vkWaitSemaphoresKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkSignalSemaphoreKHR;
    public final java.lang.invoke.MethodHandle MTD__vkSignalSemaphoreKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkWaitForPresentKHR;
    public final java.lang.invoke.MethodHandle MTD__vkWaitForPresentKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetBufferDeviceAddressKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetBufferDeviceAddressKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetBufferOpaqueCaptureAddressKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetBufferOpaqueCaptureAddressKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceMemoryOpaqueCaptureAddressKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceMemoryOpaqueCaptureAddressKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateDeferredOperationKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCreateDeferredOperationKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyDeferredOperationKHR;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyDeferredOperationKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeferredOperationMaxConcurrencyKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeferredOperationMaxConcurrencyKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeferredOperationResultKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeferredOperationResultKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDeferredOperationJoinKHR;
    public final java.lang.invoke.MethodHandle MTD__vkDeferredOperationJoinKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetPipelineExecutablePropertiesKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetPipelineExecutablePropertiesKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetPipelineExecutableStatisticsKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetPipelineExecutableStatisticsKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetPipelineExecutableInternalRepresentationsKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetPipelineExecutableInternalRepresentationsKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkMapMemory2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkMapMemory2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkUnmapMemory2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkUnmapMemory2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetEncodedVideoSessionParametersKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetEncodedVideoSessionParametersKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceBufferMemoryRequirementsKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceBufferMemoryRequirementsKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceImageMemoryRequirementsKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceImageMemoryRequirementsKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceImageSparseMemoryRequirementsKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceImageSparseMemoryRequirementsKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetRenderingAreaGranularityKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetRenderingAreaGranularityKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceImageSubresourceLayoutKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceImageSubresourceLayoutKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetImageSubresourceLayout2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetImageSubresourceLayout2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetCalibratedTimestampsKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetCalibratedTimestampsKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDebugMarkerSetObjectTagEXT;
    public final java.lang.invoke.MethodHandle MTD__vkDebugMarkerSetObjectTagEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDebugMarkerSetObjectNameEXT;
    public final java.lang.invoke.MethodHandle MTD__vkDebugMarkerSetObjectNameEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateCuModuleNVX;
    public final java.lang.invoke.MethodHandle MTD__vkCreateCuModuleNVX;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateCuFunctionNVX;
    public final java.lang.invoke.MethodHandle MTD__vkCreateCuFunctionNVX;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyCuModuleNVX;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyCuModuleNVX;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyCuFunctionNVX;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyCuFunctionNVX;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetImageViewHandleNVX;
    public final java.lang.invoke.MethodHandle MTD__vkGetImageViewHandleNVX;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetImageViewAddressNVX;
    public final java.lang.invoke.MethodHandle MTD__vkGetImageViewAddressNVX;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetShaderInfoAMD;
    public final java.lang.invoke.MethodHandle MTD__vkGetShaderInfoAMD;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDisplayPowerControlEXT;
    public final java.lang.invoke.MethodHandle MTD__vkDisplayPowerControlEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkRegisterDeviceEventEXT;
    public final java.lang.invoke.MethodHandle MTD__vkRegisterDeviceEventEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkRegisterDisplayEventEXT;
    public final java.lang.invoke.MethodHandle MTD__vkRegisterDisplayEventEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetSwapchainCounterEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetSwapchainCounterEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetRefreshCycleDurationGOOGLE;
    public final java.lang.invoke.MethodHandle MTD__vkGetRefreshCycleDurationGOOGLE;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetPastPresentationTimingGOOGLE;
    public final java.lang.invoke.MethodHandle MTD__vkGetPastPresentationTimingGOOGLE;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkSetHdrMetadataEXT;
    public final java.lang.invoke.MethodHandle MTD__vkSetHdrMetadataEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkSetDebugUtilsObjectNameEXT;
    public final java.lang.invoke.MethodHandle MTD__vkSetDebugUtilsObjectNameEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkSetDebugUtilsObjectTagEXT;
    public final java.lang.invoke.MethodHandle MTD__vkSetDebugUtilsObjectTagEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetImageDrmFormatModifierPropertiesEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetImageDrmFormatModifierPropertiesEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateValidationCacheEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCreateValidationCacheEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyValidationCacheEXT;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyValidationCacheEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkMergeValidationCachesEXT;
    public final java.lang.invoke.MethodHandle MTD__vkMergeValidationCachesEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetValidationCacheDataEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetValidationCacheDataEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateAccelerationStructureNV;
    public final java.lang.invoke.MethodHandle MTD__vkCreateAccelerationStructureNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyAccelerationStructureNV;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyAccelerationStructureNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetAccelerationStructureMemoryRequirementsNV;
    public final java.lang.invoke.MethodHandle MTD__vkGetAccelerationStructureMemoryRequirementsNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkBindAccelerationStructureMemoryNV;
    public final java.lang.invoke.MethodHandle MTD__vkBindAccelerationStructureMemoryNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateRayTracingPipelinesNV;
    public final java.lang.invoke.MethodHandle MTD__vkCreateRayTracingPipelinesNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetRayTracingShaderGroupHandlesKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetRayTracingShaderGroupHandlesKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetRayTracingShaderGroupHandlesNV;
    public final java.lang.invoke.MethodHandle MTD__vkGetRayTracingShaderGroupHandlesNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetAccelerationStructureHandleNV;
    public final java.lang.invoke.MethodHandle MTD__vkGetAccelerationStructureHandleNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCompileDeferredNV;
    public final java.lang.invoke.MethodHandle MTD__vkCompileDeferredNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetMemoryHostPointerPropertiesEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetMemoryHostPointerPropertiesEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetCalibratedTimestampsEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetCalibratedTimestampsEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkInitializePerformanceApiINTEL;
    public final java.lang.invoke.MethodHandle MTD__vkInitializePerformanceApiINTEL;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkUninitializePerformanceApiINTEL;
    public final java.lang.invoke.MethodHandle MTD__vkUninitializePerformanceApiINTEL;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkAcquirePerformanceConfigurationINTEL;
    public final java.lang.invoke.MethodHandle MTD__vkAcquirePerformanceConfigurationINTEL;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkReleasePerformanceConfigurationINTEL;
    public final java.lang.invoke.MethodHandle MTD__vkReleasePerformanceConfigurationINTEL;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetPerformanceParameterINTEL;
    public final java.lang.invoke.MethodHandle MTD__vkGetPerformanceParameterINTEL;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkSetLocalDimmingAMD;
    public final java.lang.invoke.MethodHandle MTD__vkSetLocalDimmingAMD;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetBufferDeviceAddressEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetBufferDeviceAddressEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkResetQueryPoolEXT;
    public final java.lang.invoke.MethodHandle MTD__vkResetQueryPoolEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCopyMemoryToImageEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCopyMemoryToImageEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCopyImageToMemoryEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCopyImageToMemoryEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCopyImageToImageEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCopyImageToImageEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkTransitionImageLayoutEXT;
    public final java.lang.invoke.MethodHandle MTD__vkTransitionImageLayoutEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetImageSubresourceLayout2EXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetImageSubresourceLayout2EXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkReleaseSwapchainImagesEXT;
    public final java.lang.invoke.MethodHandle MTD__vkReleaseSwapchainImagesEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetGeneratedCommandsMemoryRequirementsNV;
    public final java.lang.invoke.MethodHandle MTD__vkGetGeneratedCommandsMemoryRequirementsNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateIndirectCommandsLayoutNV;
    public final java.lang.invoke.MethodHandle MTD__vkCreateIndirectCommandsLayoutNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyIndirectCommandsLayoutNV;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyIndirectCommandsLayoutNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreatePrivateDataSlotEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCreatePrivateDataSlotEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyPrivateDataSlotEXT;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyPrivateDataSlotEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkSetPrivateDataEXT;
    public final java.lang.invoke.MethodHandle MTD__vkSetPrivateDataEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetPrivateDataEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetPrivateDataEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateCudaModuleNV;
    public final java.lang.invoke.MethodHandle MTD__vkCreateCudaModuleNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetCudaModuleCacheNV;
    public final java.lang.invoke.MethodHandle MTD__vkGetCudaModuleCacheNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateCudaFunctionNV;
    public final java.lang.invoke.MethodHandle MTD__vkCreateCudaFunctionNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyCudaModuleNV;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyCudaModuleNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyCudaFunctionNV;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyCudaFunctionNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDescriptorSetLayoutSizeEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetDescriptorSetLayoutSizeEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDescriptorSetLayoutBindingOffsetEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetDescriptorSetLayoutBindingOffsetEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDescriptorEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetDescriptorEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetBufferOpaqueCaptureDescriptorDataEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetBufferOpaqueCaptureDescriptorDataEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetImageOpaqueCaptureDescriptorDataEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetImageOpaqueCaptureDescriptorDataEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetImageViewOpaqueCaptureDescriptorDataEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetImageViewOpaqueCaptureDescriptorDataEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetSamplerOpaqueCaptureDescriptorDataEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetSamplerOpaqueCaptureDescriptorDataEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceFaultInfoEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceFaultInfoEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetMemoryRemoteAddressNV;
    public final java.lang.invoke.MethodHandle MTD__vkGetMemoryRemoteAddressNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetPipelinePropertiesEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetPipelinePropertiesEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateMicromapEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCreateMicromapEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyMicromapEXT;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyMicromapEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkBuildMicromapsEXT;
    public final java.lang.invoke.MethodHandle MTD__vkBuildMicromapsEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCopyMicromapEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCopyMicromapEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCopyMicromapToMemoryEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCopyMicromapToMemoryEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCopyMemoryToMicromapEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCopyMemoryToMicromapEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkWriteMicromapsPropertiesEXT;
    public final java.lang.invoke.MethodHandle MTD__vkWriteMicromapsPropertiesEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceMicromapCompatibilityEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceMicromapCompatibilityEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetMicromapBuildSizesEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetMicromapBuildSizesEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkSetDeviceMemoryPriorityEXT;
    public final java.lang.invoke.MethodHandle MTD__vkSetDeviceMemoryPriorityEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDescriptorSetLayoutHostMappingInfoVALVE;
    public final java.lang.invoke.MethodHandle MTD__vkGetDescriptorSetLayoutHostMappingInfoVALVE;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDescriptorSetHostMappingVALVE;
    public final java.lang.invoke.MethodHandle MTD__vkGetDescriptorSetHostMappingVALVE;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetPipelineIndirectMemoryRequirementsNV;
    public final java.lang.invoke.MethodHandle MTD__vkGetPipelineIndirectMemoryRequirementsNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetPipelineIndirectDeviceAddressNV;
    public final java.lang.invoke.MethodHandle MTD__vkGetPipelineIndirectDeviceAddressNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetShaderModuleIdentifierEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetShaderModuleIdentifierEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetShaderModuleCreateInfoIdentifierEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetShaderModuleCreateInfoIdentifierEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateOpticalFlowSessionNV;
    public final java.lang.invoke.MethodHandle MTD__vkCreateOpticalFlowSessionNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyOpticalFlowSessionNV;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyOpticalFlowSessionNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkBindOpticalFlowSessionImageNV;
    public final java.lang.invoke.MethodHandle MTD__vkBindOpticalFlowSessionImageNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateShadersEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCreateShadersEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyShaderEXT;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyShaderEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetShaderBinaryDataEXT;
    public final java.lang.invoke.MethodHandle MTD__vkGetShaderBinaryDataEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetFramebufferTilePropertiesQCOM;
    public final java.lang.invoke.MethodHandle MTD__vkGetFramebufferTilePropertiesQCOM;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDynamicRenderingTilePropertiesQCOM;
    public final java.lang.invoke.MethodHandle MTD__vkGetDynamicRenderingTilePropertiesQCOM;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkSetLatencySleepModeNV;
    public final java.lang.invoke.MethodHandle MTD__vkSetLatencySleepModeNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkLatencySleepNV;
    public final java.lang.invoke.MethodHandle MTD__vkLatencySleepNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkSetLatencyMarkerNV;
    public final java.lang.invoke.MethodHandle MTD__vkSetLatencyMarkerNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetLatencyTimingsNV;
    public final java.lang.invoke.MethodHandle MTD__vkGetLatencyTimingsNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateAccelerationStructureKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCreateAccelerationStructureKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkDestroyAccelerationStructureKHR;
    public final java.lang.invoke.MethodHandle MTD__vkDestroyAccelerationStructureKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkBuildAccelerationStructuresKHR;
    public final java.lang.invoke.MethodHandle MTD__vkBuildAccelerationStructuresKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCopyAccelerationStructureKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCopyAccelerationStructureKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCopyAccelerationStructureToMemoryKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCopyAccelerationStructureToMemoryKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCopyMemoryToAccelerationStructureKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCopyMemoryToAccelerationStructureKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkWriteAccelerationStructuresPropertiesKHR;
    public final java.lang.invoke.MethodHandle MTD__vkWriteAccelerationStructuresPropertiesKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetAccelerationStructureDeviceAddressKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetAccelerationStructureDeviceAddressKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetDeviceAccelerationStructureCompatibilityKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetDeviceAccelerationStructureCompatibilityKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetAccelerationStructureBuildSizesKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetAccelerationStructureBuildSizesKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCreateRayTracingPipelinesKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCreateRayTracingPipelinesKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetRayTracingCaptureReplayShaderGroupHandlesKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetRayTracingCaptureReplayShaderGroupHandlesKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetRayTracingShaderGroupStackSizeKHR;
    public final java.lang.invoke.MethodHandle MTD__vkGetRayTracingShaderGroupStackSizeKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkQueueSubmit;
    public final java.lang.invoke.MethodHandle MTD__vkQueueSubmit;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkQueueWaitIdle;
    public final java.lang.invoke.MethodHandle MTD__vkQueueWaitIdle;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkQueueBindSparse;
    public final java.lang.invoke.MethodHandle MTD__vkQueueBindSparse;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkBeginCommandBuffer;
    public final java.lang.invoke.MethodHandle MTD__vkBeginCommandBuffer;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkEndCommandBuffer;
    public final java.lang.invoke.MethodHandle MTD__vkEndCommandBuffer;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkResetCommandBuffer;
    public final java.lang.invoke.MethodHandle MTD__vkResetCommandBuffer;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBindPipeline;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBindPipeline;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetViewport;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetViewport;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetScissor;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetScissor;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetLineWidth;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetLineWidth;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDepthBias;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDepthBias;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetBlendConstants;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetBlendConstants;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDepthBounds;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDepthBounds;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetStencilCompareMask;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetStencilCompareMask;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetStencilWriteMask;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetStencilWriteMask;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetStencilReference;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetStencilReference;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBindDescriptorSets;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBindDescriptorSets;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBindIndexBuffer;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBindIndexBuffer;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBindVertexBuffers;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBindVertexBuffers;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDraw;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDraw;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawIndexed;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawIndexed;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawIndirect;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawIndirect;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawIndexedIndirect;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawIndexedIndirect;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDispatch;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDispatch;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDispatchIndirect;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDispatchIndirect;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyBuffer;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyBuffer;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyImage;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyImage;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBlitImage;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBlitImage;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyBufferToImage;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyBufferToImage;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyImageToBuffer;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyImageToBuffer;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdUpdateBuffer;
    public final java.lang.invoke.MethodHandle MTD__vkCmdUpdateBuffer;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdFillBuffer;
    public final java.lang.invoke.MethodHandle MTD__vkCmdFillBuffer;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdClearColorImage;
    public final java.lang.invoke.MethodHandle MTD__vkCmdClearColorImage;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdClearDepthStencilImage;
    public final java.lang.invoke.MethodHandle MTD__vkCmdClearDepthStencilImage;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdClearAttachments;
    public final java.lang.invoke.MethodHandle MTD__vkCmdClearAttachments;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdResolveImage;
    public final java.lang.invoke.MethodHandle MTD__vkCmdResolveImage;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetEvent;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetEvent;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdResetEvent;
    public final java.lang.invoke.MethodHandle MTD__vkCmdResetEvent;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdWaitEvents;
    public final java.lang.invoke.MethodHandle MTD__vkCmdWaitEvents;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdPipelineBarrier;
    public final java.lang.invoke.MethodHandle MTD__vkCmdPipelineBarrier;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBeginQuery;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBeginQuery;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdEndQuery;
    public final java.lang.invoke.MethodHandle MTD__vkCmdEndQuery;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdResetQueryPool;
    public final java.lang.invoke.MethodHandle MTD__vkCmdResetQueryPool;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdWriteTimestamp;
    public final java.lang.invoke.MethodHandle MTD__vkCmdWriteTimestamp;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyQueryPoolResults;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyQueryPoolResults;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdPushConstants;
    public final java.lang.invoke.MethodHandle MTD__vkCmdPushConstants;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBeginRenderPass;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBeginRenderPass;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdNextSubpass;
    public final java.lang.invoke.MethodHandle MTD__vkCmdNextSubpass;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdEndRenderPass;
    public final java.lang.invoke.MethodHandle MTD__vkCmdEndRenderPass;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdExecuteCommands;
    public final java.lang.invoke.MethodHandle MTD__vkCmdExecuteCommands;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDeviceMask;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDeviceMask;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDispatchBase;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDispatchBase;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawIndirectCount;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawIndirectCount;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawIndexedIndirectCount;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawIndexedIndirectCount;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBeginRenderPass2;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBeginRenderPass2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdNextSubpass2;
    public final java.lang.invoke.MethodHandle MTD__vkCmdNextSubpass2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdEndRenderPass2;
    public final java.lang.invoke.MethodHandle MTD__vkCmdEndRenderPass2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetEvent2;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetEvent2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdResetEvent2;
    public final java.lang.invoke.MethodHandle MTD__vkCmdResetEvent2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdWaitEvents2;
    public final java.lang.invoke.MethodHandle MTD__vkCmdWaitEvents2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdPipelineBarrier2;
    public final java.lang.invoke.MethodHandle MTD__vkCmdPipelineBarrier2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdWriteTimestamp2;
    public final java.lang.invoke.MethodHandle MTD__vkCmdWriteTimestamp2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkQueueSubmit2;
    public final java.lang.invoke.MethodHandle MTD__vkQueueSubmit2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyBuffer2;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyBuffer2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyImage2;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyImage2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyBufferToImage2;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyBufferToImage2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyImageToBuffer2;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyImageToBuffer2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBlitImage2;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBlitImage2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdResolveImage2;
    public final java.lang.invoke.MethodHandle MTD__vkCmdResolveImage2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBeginRendering;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBeginRendering;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdEndRendering;
    public final java.lang.invoke.MethodHandle MTD__vkCmdEndRendering;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetCullMode;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetCullMode;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetFrontFace;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetFrontFace;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetPrimitiveTopology;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetPrimitiveTopology;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetViewportWithCount;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetViewportWithCount;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetScissorWithCount;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetScissorWithCount;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBindVertexBuffers2;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBindVertexBuffers2;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDepthTestEnable;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDepthTestEnable;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDepthWriteEnable;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDepthWriteEnable;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDepthCompareOp;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDepthCompareOp;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDepthBoundsTestEnable;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDepthBoundsTestEnable;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetStencilTestEnable;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetStencilTestEnable;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetStencilOp;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetStencilOp;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetRasterizerDiscardEnable;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetRasterizerDiscardEnable;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDepthBiasEnable;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDepthBiasEnable;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetPrimitiveRestartEnable;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetPrimitiveRestartEnable;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkQueuePresentKHR;
    public final java.lang.invoke.MethodHandle MTD__vkQueuePresentKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBeginVideoCodingKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBeginVideoCodingKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdEndVideoCodingKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdEndVideoCodingKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdControlVideoCodingKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdControlVideoCodingKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDecodeVideoKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDecodeVideoKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBeginRenderingKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBeginRenderingKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdEndRenderingKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdEndRenderingKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDeviceMaskKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDeviceMaskKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDispatchBaseKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDispatchBaseKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdPushDescriptorSetKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdPushDescriptorSetKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdPushDescriptorSetWithTemplateKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdPushDescriptorSetWithTemplateKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBeginRenderPass2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBeginRenderPass2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdNextSubpass2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdNextSubpass2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdEndRenderPass2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdEndRenderPass2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawIndirectCountKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawIndirectCountKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawIndexedIndirectCountKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawIndexedIndirectCountKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetFragmentShadingRateKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetFragmentShadingRateKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetRenderingAttachmentLocationsKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetRenderingAttachmentLocationsKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetRenderingInputAttachmentIndicesKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetRenderingInputAttachmentIndicesKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdEncodeVideoKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdEncodeVideoKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetEvent2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetEvent2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdResetEvent2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdResetEvent2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdWaitEvents2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdWaitEvents2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdPipelineBarrier2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdPipelineBarrier2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdWriteTimestamp2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdWriteTimestamp2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkQueueSubmit2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkQueueSubmit2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdWriteBufferMarker2AMD;
    public final java.lang.invoke.MethodHandle MTD__vkCmdWriteBufferMarker2AMD;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetQueueCheckpointData2NV;
    public final java.lang.invoke.MethodHandle MTD__vkGetQueueCheckpointData2NV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyBuffer2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyBuffer2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyImage2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyImage2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyBufferToImage2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyBufferToImage2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyImageToBuffer2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyImageToBuffer2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBlitImage2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBlitImage2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdResolveImage2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdResolveImage2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdTraceRaysIndirect2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdTraceRaysIndirect2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBindIndexBuffer2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBindIndexBuffer2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetLineStippleKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetLineStippleKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBindDescriptorSets2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBindDescriptorSets2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdPushConstants2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdPushConstants2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdPushDescriptorSet2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdPushDescriptorSet2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdPushDescriptorSetWithTemplate2KHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdPushDescriptorSetWithTemplate2KHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDescriptorBufferOffsets2EXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDescriptorBufferOffsets2EXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBindDescriptorBufferEmbeddedSamplers2EXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBindDescriptorBufferEmbeddedSamplers2EXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDebugMarkerBeginEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDebugMarkerBeginEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDebugMarkerEndEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDebugMarkerEndEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDebugMarkerInsertEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDebugMarkerInsertEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBindTransformFeedbackBuffersEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBindTransformFeedbackBuffersEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBeginTransformFeedbackEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBeginTransformFeedbackEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdEndTransformFeedbackEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdEndTransformFeedbackEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBeginQueryIndexedEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBeginQueryIndexedEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdEndQueryIndexedEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdEndQueryIndexedEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawIndirectByteCountEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawIndirectByteCountEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCuLaunchKernelNVX;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCuLaunchKernelNVX;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawIndirectCountAMD;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawIndirectCountAMD;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawIndexedIndirectCountAMD;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawIndexedIndirectCountAMD;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBeginConditionalRenderingEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBeginConditionalRenderingEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdEndConditionalRenderingEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdEndConditionalRenderingEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetViewportWScalingNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetViewportWScalingNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDiscardRectangleEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDiscardRectangleEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDiscardRectangleEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDiscardRectangleEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDiscardRectangleModeEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDiscardRectangleModeEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkQueueBeginDebugUtilsLabelEXT;
    public final java.lang.invoke.MethodHandle MTD__vkQueueBeginDebugUtilsLabelEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkQueueEndDebugUtilsLabelEXT;
    public final java.lang.invoke.MethodHandle MTD__vkQueueEndDebugUtilsLabelEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkQueueInsertDebugUtilsLabelEXT;
    public final java.lang.invoke.MethodHandle MTD__vkQueueInsertDebugUtilsLabelEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBeginDebugUtilsLabelEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBeginDebugUtilsLabelEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdEndDebugUtilsLabelEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdEndDebugUtilsLabelEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdInsertDebugUtilsLabelEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdInsertDebugUtilsLabelEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetSampleLocationsEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetSampleLocationsEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBindShadingRateImageNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBindShadingRateImageNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetViewportShadingRatePaletteNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetViewportShadingRatePaletteNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetCoarseSampleOrderNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetCoarseSampleOrderNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBuildAccelerationStructureNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBuildAccelerationStructureNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyAccelerationStructureNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyAccelerationStructureNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdTraceRaysNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdTraceRaysNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdWriteAccelerationStructuresPropertiesNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdWriteAccelerationStructuresPropertiesNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdWriteBufferMarkerAMD;
    public final java.lang.invoke.MethodHandle MTD__vkCmdWriteBufferMarkerAMD;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawMeshTasksNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawMeshTasksNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawMeshTasksIndirectNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawMeshTasksIndirectNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawMeshTasksIndirectCountNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawMeshTasksIndirectCountNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetExclusiveScissorEnableNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetExclusiveScissorEnableNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetExclusiveScissorNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetExclusiveScissorNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetCheckpointNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetCheckpointNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkGetQueueCheckpointDataNV;
    public final java.lang.invoke.MethodHandle MTD__vkGetQueueCheckpointDataNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetPerformanceMarkerINTEL;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetPerformanceMarkerINTEL;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetPerformanceStreamMarkerINTEL;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetPerformanceStreamMarkerINTEL;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetPerformanceOverrideINTEL;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetPerformanceOverrideINTEL;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkQueueSetPerformanceConfigurationINTEL;
    public final java.lang.invoke.MethodHandle MTD__vkQueueSetPerformanceConfigurationINTEL;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetLineStippleEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetLineStippleEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetCullModeEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetCullModeEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetFrontFaceEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetFrontFaceEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetPrimitiveTopologyEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetPrimitiveTopologyEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetViewportWithCountEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetViewportWithCountEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetScissorWithCountEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetScissorWithCountEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBindVertexBuffers2EXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBindVertexBuffers2EXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDepthTestEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDepthTestEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDepthWriteEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDepthWriteEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDepthCompareOpEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDepthCompareOpEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDepthBoundsTestEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDepthBoundsTestEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetStencilTestEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetStencilTestEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetStencilOpEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetStencilOpEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdPreprocessGeneratedCommandsNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdPreprocessGeneratedCommandsNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdExecuteGeneratedCommandsNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdExecuteGeneratedCommandsNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBindPipelineShaderGroupNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBindPipelineShaderGroupNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDepthBias2EXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDepthBias2EXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCudaLaunchKernelNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCudaLaunchKernelNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBindDescriptorBuffersEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBindDescriptorBuffersEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDescriptorBufferOffsetsEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDescriptorBufferOffsetsEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBindDescriptorBufferEmbeddedSamplersEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBindDescriptorBufferEmbeddedSamplersEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetFragmentShadingRateEnumNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetFragmentShadingRateEnumNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetVertexInputEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetVertexInputEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSubpassShadingHUAWEI;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSubpassShadingHUAWEI;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBindInvocationMaskHUAWEI;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBindInvocationMaskHUAWEI;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetPatchControlPointsEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetPatchControlPointsEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetRasterizerDiscardEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetRasterizerDiscardEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDepthBiasEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDepthBiasEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetLogicOpEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetLogicOpEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetPrimitiveRestartEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetPrimitiveRestartEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetColorWriteEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetColorWriteEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawMultiEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawMultiEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawMultiIndexedEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawMultiIndexedEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBuildMicromapsEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBuildMicromapsEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyMicromapEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyMicromapEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyMicromapToMemoryEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyMicromapToMemoryEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyMemoryToMicromapEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyMemoryToMicromapEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdWriteMicromapsPropertiesEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdWriteMicromapsPropertiesEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawClusterHUAWEI;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawClusterHUAWEI;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawClusterIndirectHUAWEI;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawClusterIndirectHUAWEI;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyMemoryIndirectNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyMemoryIndirectNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyMemoryToImageIndirectNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyMemoryToImageIndirectNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDecompressMemoryNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDecompressMemoryNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDecompressMemoryIndirectCountNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDecompressMemoryIndirectCountNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdUpdatePipelineIndirectBufferNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdUpdatePipelineIndirectBufferNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDepthClampEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDepthClampEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetPolygonModeEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetPolygonModeEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetRasterizationSamplesEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetRasterizationSamplesEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetSampleMaskEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetSampleMaskEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetAlphaToCoverageEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetAlphaToCoverageEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetAlphaToOneEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetAlphaToOneEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetLogicOpEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetLogicOpEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetColorBlendEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetColorBlendEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetColorBlendEquationEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetColorBlendEquationEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetColorWriteMaskEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetColorWriteMaskEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetTessellationDomainOriginEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetTessellationDomainOriginEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetRasterizationStreamEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetRasterizationStreamEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetConservativeRasterizationModeEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetConservativeRasterizationModeEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetExtraPrimitiveOverestimationSizeEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetExtraPrimitiveOverestimationSizeEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDepthClipEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDepthClipEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetSampleLocationsEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetSampleLocationsEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetColorBlendAdvancedEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetColorBlendAdvancedEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetProvokingVertexModeEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetProvokingVertexModeEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetLineRasterizationModeEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetLineRasterizationModeEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetLineStippleEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetLineStippleEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetDepthClipNegativeOneToOneEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetDepthClipNegativeOneToOneEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetViewportWScalingEnableNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetViewportWScalingEnableNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetViewportSwizzleNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetViewportSwizzleNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetCoverageToColorEnableNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetCoverageToColorEnableNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetCoverageToColorLocationNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetCoverageToColorLocationNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetCoverageModulationModeNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetCoverageModulationModeNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetCoverageModulationTableEnableNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetCoverageModulationTableEnableNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetCoverageModulationTableNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetCoverageModulationTableNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetShadingRateImageEnableNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetShadingRateImageEnableNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetRepresentativeFragmentTestEnableNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetRepresentativeFragmentTestEnableNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetCoverageReductionModeNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetCoverageReductionModeNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdOpticalFlowExecuteNV;
    public final java.lang.invoke.MethodHandle MTD__vkCmdOpticalFlowExecuteNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBindShadersEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBindShadersEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkQueueNotifyOutOfBandNV;
    public final java.lang.invoke.MethodHandle MTD__vkQueueNotifyOutOfBandNV;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetAttachmentFeedbackLoopEnableEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetAttachmentFeedbackLoopEnableEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBuildAccelerationStructuresKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBuildAccelerationStructuresKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdBuildAccelerationStructuresIndirectKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdBuildAccelerationStructuresIndirectKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyAccelerationStructureKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyAccelerationStructureKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyAccelerationStructureToMemoryKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyAccelerationStructureToMemoryKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdCopyMemoryToAccelerationStructureKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdCopyMemoryToAccelerationStructureKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdWriteAccelerationStructuresPropertiesKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdWriteAccelerationStructuresPropertiesKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdTraceRaysKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdTraceRaysKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdTraceRaysIndirectKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdTraceRaysIndirectKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdSetRayTracingPipelineStackSizeKHR;
    public final java.lang.invoke.MethodHandle MTD__vkCmdSetRayTracingPipelineStackSizeKHR;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawMeshTasksEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawMeshTasksEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawMeshTasksIndirectEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawMeshTasksIndirectEXT;
    public final java.lang.foreign.MemorySegment MTD_ADDRESS__vkCmdDrawMeshTasksIndirectCountEXT;
    public final java.lang.invoke.MethodHandle MTD__vkCmdDrawMeshTasksIndirectCountEXT;

    public VkDevice(java.lang.foreign.MemorySegment handle)
    {
        this.handle = handle;
        try (java.lang.foreign.Arena arena = java.lang.foreign.Arena.ofConfined())
        {
            this.MTD_ADDRESS__vkDestroyDevice = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyDevice"));
            this.MTD__vkDestroyDevice = this.MTD_ADDRESS__vkDestroyDevice.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyDevice, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceQueue = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceQueue"));
            this.MTD__vkGetDeviceQueue = this.MTD_ADDRESS__vkGetDeviceQueue.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceQueue, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDeviceWaitIdle = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDeviceWaitIdle"));
            this.MTD__vkDeviceWaitIdle = this.MTD_ADDRESS__vkDeviceWaitIdle.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDeviceWaitIdle, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkAllocateMemory = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkAllocateMemory"));
            this.MTD__vkAllocateMemory = this.MTD_ADDRESS__vkAllocateMemory.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkAllocateMemory, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkFreeMemory = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkFreeMemory"));
            this.MTD__vkFreeMemory = this.MTD_ADDRESS__vkFreeMemory.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkFreeMemory, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkMapMemory = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkMapMemory"));
            this.MTD__vkMapMemory = this.MTD_ADDRESS__vkMapMemory.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkMapMemory, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkUnmapMemory = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkUnmapMemory"));
            this.MTD__vkUnmapMemory = this.MTD_ADDRESS__vkUnmapMemory.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkUnmapMemory, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkFlushMappedMemoryRanges = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkFlushMappedMemoryRanges"));
            this.MTD__vkFlushMappedMemoryRanges = this.MTD_ADDRESS__vkFlushMappedMemoryRanges.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkFlushMappedMemoryRanges, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkInvalidateMappedMemoryRanges = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkInvalidateMappedMemoryRanges"));
            this.MTD__vkInvalidateMappedMemoryRanges = this.MTD_ADDRESS__vkInvalidateMappedMemoryRanges.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkInvalidateMappedMemoryRanges, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceMemoryCommitment = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceMemoryCommitment"));
            this.MTD__vkGetDeviceMemoryCommitment = this.MTD_ADDRESS__vkGetDeviceMemoryCommitment.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceMemoryCommitment, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkBindBufferMemory = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkBindBufferMemory"));
            this.MTD__vkBindBufferMemory = this.MTD_ADDRESS__vkBindBufferMemory.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkBindBufferMemory, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkBindImageMemory = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkBindImageMemory"));
            this.MTD__vkBindImageMemory = this.MTD_ADDRESS__vkBindImageMemory.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkBindImageMemory, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkGetBufferMemoryRequirements = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetBufferMemoryRequirements"));
            this.MTD__vkGetBufferMemoryRequirements = this.MTD_ADDRESS__vkGetBufferMemoryRequirements.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetBufferMemoryRequirements, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetImageMemoryRequirements = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetImageMemoryRequirements"));
            this.MTD__vkGetImageMemoryRequirements = this.MTD_ADDRESS__vkGetImageMemoryRequirements.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetImageMemoryRequirements, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetImageSparseMemoryRequirements = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetImageSparseMemoryRequirements"));
            this.MTD__vkGetImageSparseMemoryRequirements = this.MTD_ADDRESS__vkGetImageSparseMemoryRequirements.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetImageSparseMemoryRequirements, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateFence = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateFence"));
            this.MTD__vkCreateFence = this.MTD_ADDRESS__vkCreateFence.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateFence, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyFence = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyFence"));
            this.MTD__vkDestroyFence = this.MTD_ADDRESS__vkDestroyFence.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyFence, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkResetFences = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkResetFences"));
            this.MTD__vkResetFences = this.MTD_ADDRESS__vkResetFences.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkResetFences, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetFenceStatus = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetFenceStatus"));
            this.MTD__vkGetFenceStatus = this.MTD_ADDRESS__vkGetFenceStatus.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetFenceStatus, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkWaitForFences = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkWaitForFences"));
            this.MTD__vkWaitForFences = this.MTD_ADDRESS__vkWaitForFences.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkWaitForFences, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkCreateSemaphore = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateSemaphore"));
            this.MTD__vkCreateSemaphore = this.MTD_ADDRESS__vkCreateSemaphore.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateSemaphore, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroySemaphore = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroySemaphore"));
            this.MTD__vkDestroySemaphore = this.MTD_ADDRESS__vkDestroySemaphore.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroySemaphore, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateEvent = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateEvent"));
            this.MTD__vkCreateEvent = this.MTD_ADDRESS__vkCreateEvent.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateEvent, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyEvent = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyEvent"));
            this.MTD__vkDestroyEvent = this.MTD_ADDRESS__vkDestroyEvent.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyEvent, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetEventStatus = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetEventStatus"));
            this.MTD__vkGetEventStatus = this.MTD_ADDRESS__vkGetEventStatus.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetEventStatus, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkSetEvent = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkSetEvent"));
            this.MTD__vkSetEvent = this.MTD_ADDRESS__vkSetEvent.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkSetEvent, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkResetEvent = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkResetEvent"));
            this.MTD__vkResetEvent = this.MTD_ADDRESS__vkResetEvent.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkResetEvent, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateQueryPool = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateQueryPool"));
            this.MTD__vkCreateQueryPool = this.MTD_ADDRESS__vkCreateQueryPool.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateQueryPool, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyQueryPool = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyQueryPool"));
            this.MTD__vkDestroyQueryPool = this.MTD_ADDRESS__vkDestroyQueryPool.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyQueryPool, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetQueryPoolResults = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetQueryPoolResults"));
            this.MTD__vkGetQueryPoolResults = this.MTD_ADDRESS__vkGetQueryPoolResults.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetQueryPoolResults, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCreateBuffer = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateBuffer"));
            this.MTD__vkCreateBuffer = this.MTD_ADDRESS__vkCreateBuffer.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateBuffer, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyBuffer = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyBuffer"));
            this.MTD__vkDestroyBuffer = this.MTD_ADDRESS__vkDestroyBuffer.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyBuffer, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateBufferView = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateBufferView"));
            this.MTD__vkCreateBufferView = this.MTD_ADDRESS__vkCreateBufferView.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateBufferView, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyBufferView = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyBufferView"));
            this.MTD__vkDestroyBufferView = this.MTD_ADDRESS__vkDestroyBufferView.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyBufferView, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateImage = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateImage"));
            this.MTD__vkCreateImage = this.MTD_ADDRESS__vkCreateImage.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateImage, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyImage = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyImage"));
            this.MTD__vkDestroyImage = this.MTD_ADDRESS__vkDestroyImage.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyImage, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetImageSubresourceLayout = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetImageSubresourceLayout"));
            this.MTD__vkGetImageSubresourceLayout = this.MTD_ADDRESS__vkGetImageSubresourceLayout.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetImageSubresourceLayout, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateImageView = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateImageView"));
            this.MTD__vkCreateImageView = this.MTD_ADDRESS__vkCreateImageView.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateImageView, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyImageView = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyImageView"));
            this.MTD__vkDestroyImageView = this.MTD_ADDRESS__vkDestroyImageView.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyImageView, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateShaderModule = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateShaderModule"));
            this.MTD__vkCreateShaderModule = this.MTD_ADDRESS__vkCreateShaderModule.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateShaderModule, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyShaderModule = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyShaderModule"));
            this.MTD__vkDestroyShaderModule = this.MTD_ADDRESS__vkDestroyShaderModule.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyShaderModule, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreatePipelineCache = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreatePipelineCache"));
            this.MTD__vkCreatePipelineCache = this.MTD_ADDRESS__vkCreatePipelineCache.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreatePipelineCache, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyPipelineCache = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyPipelineCache"));
            this.MTD__vkDestroyPipelineCache = this.MTD_ADDRESS__vkDestroyPipelineCache.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyPipelineCache, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetPipelineCacheData = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetPipelineCacheData"));
            this.MTD__vkGetPipelineCacheData = this.MTD_ADDRESS__vkGetPipelineCacheData.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetPipelineCacheData, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkMergePipelineCaches = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkMergePipelineCaches"));
            this.MTD__vkMergePipelineCaches = this.MTD_ADDRESS__vkMergePipelineCaches.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkMergePipelineCaches, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateGraphicsPipelines = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateGraphicsPipelines"));
            this.MTD__vkCreateGraphicsPipelines = this.MTD_ADDRESS__vkCreateGraphicsPipelines.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateGraphicsPipelines, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateComputePipelines = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateComputePipelines"));
            this.MTD__vkCreateComputePipelines = this.MTD_ADDRESS__vkCreateComputePipelines.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateComputePipelines, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyPipeline = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyPipeline"));
            this.MTD__vkDestroyPipeline = this.MTD_ADDRESS__vkDestroyPipeline.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyPipeline, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreatePipelineLayout = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreatePipelineLayout"));
            this.MTD__vkCreatePipelineLayout = this.MTD_ADDRESS__vkCreatePipelineLayout.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreatePipelineLayout, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyPipelineLayout = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyPipelineLayout"));
            this.MTD__vkDestroyPipelineLayout = this.MTD_ADDRESS__vkDestroyPipelineLayout.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyPipelineLayout, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateSampler = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateSampler"));
            this.MTD__vkCreateSampler = this.MTD_ADDRESS__vkCreateSampler.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateSampler, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroySampler = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroySampler"));
            this.MTD__vkDestroySampler = this.MTD_ADDRESS__vkDestroySampler.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroySampler, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateDescriptorSetLayout = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateDescriptorSetLayout"));
            this.MTD__vkCreateDescriptorSetLayout = this.MTD_ADDRESS__vkCreateDescriptorSetLayout.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateDescriptorSetLayout, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyDescriptorSetLayout = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyDescriptorSetLayout"));
            this.MTD__vkDestroyDescriptorSetLayout = this.MTD_ADDRESS__vkDestroyDescriptorSetLayout.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyDescriptorSetLayout, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateDescriptorPool = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateDescriptorPool"));
            this.MTD__vkCreateDescriptorPool = this.MTD_ADDRESS__vkCreateDescriptorPool.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateDescriptorPool, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyDescriptorPool = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyDescriptorPool"));
            this.MTD__vkDestroyDescriptorPool = this.MTD_ADDRESS__vkDestroyDescriptorPool.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyDescriptorPool, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkResetDescriptorPool = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkResetDescriptorPool"));
            this.MTD__vkResetDescriptorPool = this.MTD_ADDRESS__vkResetDescriptorPool.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkResetDescriptorPool, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkAllocateDescriptorSets = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkAllocateDescriptorSets"));
            this.MTD__vkAllocateDescriptorSets = this.MTD_ADDRESS__vkAllocateDescriptorSets.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkAllocateDescriptorSets, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkFreeDescriptorSets = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkFreeDescriptorSets"));
            this.MTD__vkFreeDescriptorSets = this.MTD_ADDRESS__vkFreeDescriptorSets.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkFreeDescriptorSets, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkUpdateDescriptorSets = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkUpdateDescriptorSets"));
            this.MTD__vkUpdateDescriptorSets = this.MTD_ADDRESS__vkUpdateDescriptorSets.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkUpdateDescriptorSets, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateFramebuffer = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateFramebuffer"));
            this.MTD__vkCreateFramebuffer = this.MTD_ADDRESS__vkCreateFramebuffer.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateFramebuffer, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyFramebuffer = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyFramebuffer"));
            this.MTD__vkDestroyFramebuffer = this.MTD_ADDRESS__vkDestroyFramebuffer.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyFramebuffer, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateRenderPass = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateRenderPass"));
            this.MTD__vkCreateRenderPass = this.MTD_ADDRESS__vkCreateRenderPass.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateRenderPass, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyRenderPass = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyRenderPass"));
            this.MTD__vkDestroyRenderPass = this.MTD_ADDRESS__vkDestroyRenderPass.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyRenderPass, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetRenderAreaGranularity = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetRenderAreaGranularity"));
            this.MTD__vkGetRenderAreaGranularity = this.MTD_ADDRESS__vkGetRenderAreaGranularity.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetRenderAreaGranularity, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateCommandPool = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateCommandPool"));
            this.MTD__vkCreateCommandPool = this.MTD_ADDRESS__vkCreateCommandPool.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateCommandPool, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyCommandPool = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyCommandPool"));
            this.MTD__vkDestroyCommandPool = this.MTD_ADDRESS__vkDestroyCommandPool.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyCommandPool, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkResetCommandPool = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkResetCommandPool"));
            this.MTD__vkResetCommandPool = this.MTD_ADDRESS__vkResetCommandPool.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkResetCommandPool, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkAllocateCommandBuffers = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkAllocateCommandBuffers"));
            this.MTD__vkAllocateCommandBuffers = this.MTD_ADDRESS__vkAllocateCommandBuffers.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkAllocateCommandBuffers, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkFreeCommandBuffers = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkFreeCommandBuffers"));
            this.MTD__vkFreeCommandBuffers = this.MTD_ADDRESS__vkFreeCommandBuffers.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkFreeCommandBuffers, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkBindBufferMemory2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkBindBufferMemory2"));
            this.MTD__vkBindBufferMemory2 = this.MTD_ADDRESS__vkBindBufferMemory2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkBindBufferMemory2, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkBindImageMemory2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkBindImageMemory2"));
            this.MTD__vkBindImageMemory2 = this.MTD_ADDRESS__vkBindImageMemory2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkBindImageMemory2, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceGroupPeerMemoryFeatures = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceGroupPeerMemoryFeatures"));
            this.MTD__vkGetDeviceGroupPeerMemoryFeatures = this.MTD_ADDRESS__vkGetDeviceGroupPeerMemoryFeatures.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceGroupPeerMemoryFeatures, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetImageMemoryRequirements2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetImageMemoryRequirements2"));
            this.MTD__vkGetImageMemoryRequirements2 = this.MTD_ADDRESS__vkGetImageMemoryRequirements2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetImageMemoryRequirements2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetBufferMemoryRequirements2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetBufferMemoryRequirements2"));
            this.MTD__vkGetBufferMemoryRequirements2 = this.MTD_ADDRESS__vkGetBufferMemoryRequirements2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetBufferMemoryRequirements2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetImageSparseMemoryRequirements2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetImageSparseMemoryRequirements2"));
            this.MTD__vkGetImageSparseMemoryRequirements2 = this.MTD_ADDRESS__vkGetImageSparseMemoryRequirements2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetImageSparseMemoryRequirements2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkTrimCommandPool = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkTrimCommandPool"));
            this.MTD__vkTrimCommandPool = this.MTD_ADDRESS__vkTrimCommandPool.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkTrimCommandPool, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkGetDeviceQueue2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceQueue2"));
            this.MTD__vkGetDeviceQueue2 = this.MTD_ADDRESS__vkGetDeviceQueue2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceQueue2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateSamplerYcbcrConversion = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateSamplerYcbcrConversion"));
            this.MTD__vkCreateSamplerYcbcrConversion = this.MTD_ADDRESS__vkCreateSamplerYcbcrConversion.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateSamplerYcbcrConversion, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroySamplerYcbcrConversion = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroySamplerYcbcrConversion"));
            this.MTD__vkDestroySamplerYcbcrConversion = this.MTD_ADDRESS__vkDestroySamplerYcbcrConversion.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroySamplerYcbcrConversion, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateDescriptorUpdateTemplate = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateDescriptorUpdateTemplate"));
            this.MTD__vkCreateDescriptorUpdateTemplate = this.MTD_ADDRESS__vkCreateDescriptorUpdateTemplate.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateDescriptorUpdateTemplate, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyDescriptorUpdateTemplate = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyDescriptorUpdateTemplate"));
            this.MTD__vkDestroyDescriptorUpdateTemplate = this.MTD_ADDRESS__vkDestroyDescriptorUpdateTemplate.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyDescriptorUpdateTemplate, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkUpdateDescriptorSetWithTemplate = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkUpdateDescriptorSetWithTemplate"));
            this.MTD__vkUpdateDescriptorSetWithTemplate = this.MTD_ADDRESS__vkUpdateDescriptorSetWithTemplate.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkUpdateDescriptorSetWithTemplate, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDescriptorSetLayoutSupport = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDescriptorSetLayoutSupport"));
            this.MTD__vkGetDescriptorSetLayoutSupport = this.MTD_ADDRESS__vkGetDescriptorSetLayoutSupport.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDescriptorSetLayoutSupport, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateRenderPass2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateRenderPass2"));
            this.MTD__vkCreateRenderPass2 = this.MTD_ADDRESS__vkCreateRenderPass2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateRenderPass2, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkResetQueryPool = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkResetQueryPool"));
            this.MTD__vkResetQueryPool = this.MTD_ADDRESS__vkResetQueryPool.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkResetQueryPool, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkGetSemaphoreCounterValue = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetSemaphoreCounterValue"));
            this.MTD__vkGetSemaphoreCounterValue = this.MTD_ADDRESS__vkGetSemaphoreCounterValue.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetSemaphoreCounterValue, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkWaitSemaphores = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkWaitSemaphores"));
            this.MTD__vkWaitSemaphores = this.MTD_ADDRESS__vkWaitSemaphores.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkWaitSemaphores, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkSignalSemaphore = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkSignalSemaphore"));
            this.MTD__vkSignalSemaphore = this.MTD_ADDRESS__vkSignalSemaphore.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkSignalSemaphore, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetBufferDeviceAddress = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetBufferDeviceAddress"));
            this.MTD__vkGetBufferDeviceAddress = this.MTD_ADDRESS__vkGetBufferDeviceAddress.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetBufferDeviceAddress, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetBufferOpaqueCaptureAddress = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetBufferOpaqueCaptureAddress"));
            this.MTD__vkGetBufferOpaqueCaptureAddress = this.MTD_ADDRESS__vkGetBufferOpaqueCaptureAddress.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetBufferOpaqueCaptureAddress, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceMemoryOpaqueCaptureAddress = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceMemoryOpaqueCaptureAddress"));
            this.MTD__vkGetDeviceMemoryOpaqueCaptureAddress = this.MTD_ADDRESS__vkGetDeviceMemoryOpaqueCaptureAddress.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceMemoryOpaqueCaptureAddress, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreatePrivateDataSlot = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreatePrivateDataSlot"));
            this.MTD__vkCreatePrivateDataSlot = this.MTD_ADDRESS__vkCreatePrivateDataSlot.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreatePrivateDataSlot, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyPrivateDataSlot = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyPrivateDataSlot"));
            this.MTD__vkDestroyPrivateDataSlot = this.MTD_ADDRESS__vkDestroyPrivateDataSlot.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyPrivateDataSlot, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkSetPrivateData = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkSetPrivateData"));
            this.MTD__vkSetPrivateData = this.MTD_ADDRESS__vkSetPrivateData.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkSetPrivateData, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkGetPrivateData = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetPrivateData"));
            this.MTD__vkGetPrivateData = this.MTD_ADDRESS__vkGetPrivateData.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetPrivateData, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceBufferMemoryRequirements = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceBufferMemoryRequirements"));
            this.MTD__vkGetDeviceBufferMemoryRequirements = this.MTD_ADDRESS__vkGetDeviceBufferMemoryRequirements.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceBufferMemoryRequirements, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceImageMemoryRequirements = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceImageMemoryRequirements"));
            this.MTD__vkGetDeviceImageMemoryRequirements = this.MTD_ADDRESS__vkGetDeviceImageMemoryRequirements.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceImageMemoryRequirements, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceImageSparseMemoryRequirements = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceImageSparseMemoryRequirements"));
            this.MTD__vkGetDeviceImageSparseMemoryRequirements = this.MTD_ADDRESS__vkGetDeviceImageSparseMemoryRequirements.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceImageSparseMemoryRequirements, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateSwapchainKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateSwapchainKHR"));
            this.MTD__vkCreateSwapchainKHR = this.MTD_ADDRESS__vkCreateSwapchainKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateSwapchainKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroySwapchainKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroySwapchainKHR"));
            this.MTD__vkDestroySwapchainKHR = this.MTD_ADDRESS__vkDestroySwapchainKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroySwapchainKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetSwapchainImagesKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetSwapchainImagesKHR"));
            this.MTD__vkGetSwapchainImagesKHR = this.MTD_ADDRESS__vkGetSwapchainImagesKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetSwapchainImagesKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkAcquireNextImageKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkAcquireNextImageKHR"));
            this.MTD__vkAcquireNextImageKHR = this.MTD_ADDRESS__vkAcquireNextImageKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkAcquireNextImageKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceGroupPresentCapabilitiesKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceGroupPresentCapabilitiesKHR"));
            this.MTD__vkGetDeviceGroupPresentCapabilitiesKHR = this.MTD_ADDRESS__vkGetDeviceGroupPresentCapabilitiesKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceGroupPresentCapabilitiesKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceGroupSurfacePresentModesKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceGroupSurfacePresentModesKHR"));
            this.MTD__vkGetDeviceGroupSurfacePresentModesKHR = this.MTD_ADDRESS__vkGetDeviceGroupSurfacePresentModesKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceGroupSurfacePresentModesKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkAcquireNextImage2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkAcquireNextImage2KHR"));
            this.MTD__vkAcquireNextImage2KHR = this.MTD_ADDRESS__vkAcquireNextImage2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkAcquireNextImage2KHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateSharedSwapchainsKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateSharedSwapchainsKHR"));
            this.MTD__vkCreateSharedSwapchainsKHR = this.MTD_ADDRESS__vkCreateSharedSwapchainsKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateSharedSwapchainsKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateVideoSessionKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateVideoSessionKHR"));
            this.MTD__vkCreateVideoSessionKHR = this.MTD_ADDRESS__vkCreateVideoSessionKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateVideoSessionKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyVideoSessionKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyVideoSessionKHR"));
            this.MTD__vkDestroyVideoSessionKHR = this.MTD_ADDRESS__vkDestroyVideoSessionKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyVideoSessionKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetVideoSessionMemoryRequirementsKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetVideoSessionMemoryRequirementsKHR"));
            this.MTD__vkGetVideoSessionMemoryRequirementsKHR = this.MTD_ADDRESS__vkGetVideoSessionMemoryRequirementsKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetVideoSessionMemoryRequirementsKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkBindVideoSessionMemoryKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkBindVideoSessionMemoryKHR"));
            this.MTD__vkBindVideoSessionMemoryKHR = this.MTD_ADDRESS__vkBindVideoSessionMemoryKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkBindVideoSessionMemoryKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateVideoSessionParametersKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateVideoSessionParametersKHR"));
            this.MTD__vkCreateVideoSessionParametersKHR = this.MTD_ADDRESS__vkCreateVideoSessionParametersKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateVideoSessionParametersKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkUpdateVideoSessionParametersKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkUpdateVideoSessionParametersKHR"));
            this.MTD__vkUpdateVideoSessionParametersKHR = this.MTD_ADDRESS__vkUpdateVideoSessionParametersKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkUpdateVideoSessionParametersKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyVideoSessionParametersKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyVideoSessionParametersKHR"));
            this.MTD__vkDestroyVideoSessionParametersKHR = this.MTD_ADDRESS__vkDestroyVideoSessionParametersKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyVideoSessionParametersKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceGroupPeerMemoryFeaturesKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceGroupPeerMemoryFeaturesKHR"));
            this.MTD__vkGetDeviceGroupPeerMemoryFeaturesKHR = this.MTD_ADDRESS__vkGetDeviceGroupPeerMemoryFeaturesKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceGroupPeerMemoryFeaturesKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkTrimCommandPoolKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkTrimCommandPoolKHR"));
            this.MTD__vkTrimCommandPoolKHR = this.MTD_ADDRESS__vkTrimCommandPoolKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkTrimCommandPoolKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkGetMemoryFdKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetMemoryFdKHR"));
            this.MTD__vkGetMemoryFdKHR = this.MTD_ADDRESS__vkGetMemoryFdKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetMemoryFdKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetMemoryFdPropertiesKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetMemoryFdPropertiesKHR"));
            this.MTD__vkGetMemoryFdPropertiesKHR = this.MTD_ADDRESS__vkGetMemoryFdPropertiesKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetMemoryFdPropertiesKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkImportSemaphoreFdKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkImportSemaphoreFdKHR"));
            this.MTD__vkImportSemaphoreFdKHR = this.MTD_ADDRESS__vkImportSemaphoreFdKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkImportSemaphoreFdKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetSemaphoreFdKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetSemaphoreFdKHR"));
            this.MTD__vkGetSemaphoreFdKHR = this.MTD_ADDRESS__vkGetSemaphoreFdKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetSemaphoreFdKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateDescriptorUpdateTemplateKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateDescriptorUpdateTemplateKHR"));
            this.MTD__vkCreateDescriptorUpdateTemplateKHR = this.MTD_ADDRESS__vkCreateDescriptorUpdateTemplateKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateDescriptorUpdateTemplateKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyDescriptorUpdateTemplateKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyDescriptorUpdateTemplateKHR"));
            this.MTD__vkDestroyDescriptorUpdateTemplateKHR = this.MTD_ADDRESS__vkDestroyDescriptorUpdateTemplateKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyDescriptorUpdateTemplateKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkUpdateDescriptorSetWithTemplateKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkUpdateDescriptorSetWithTemplateKHR"));
            this.MTD__vkUpdateDescriptorSetWithTemplateKHR = this.MTD_ADDRESS__vkUpdateDescriptorSetWithTemplateKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkUpdateDescriptorSetWithTemplateKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateRenderPass2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateRenderPass2KHR"));
            this.MTD__vkCreateRenderPass2KHR = this.MTD_ADDRESS__vkCreateRenderPass2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateRenderPass2KHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetSwapchainStatusKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetSwapchainStatusKHR"));
            this.MTD__vkGetSwapchainStatusKHR = this.MTD_ADDRESS__vkGetSwapchainStatusKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetSwapchainStatusKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkImportFenceFdKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkImportFenceFdKHR"));
            this.MTD__vkImportFenceFdKHR = this.MTD_ADDRESS__vkImportFenceFdKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkImportFenceFdKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetFenceFdKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetFenceFdKHR"));
            this.MTD__vkGetFenceFdKHR = this.MTD_ADDRESS__vkGetFenceFdKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetFenceFdKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkAcquireProfilingLockKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkAcquireProfilingLockKHR"));
            this.MTD__vkAcquireProfilingLockKHR = this.MTD_ADDRESS__vkAcquireProfilingLockKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkAcquireProfilingLockKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkReleaseProfilingLockKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkReleaseProfilingLockKHR"));
            this.MTD__vkReleaseProfilingLockKHR = this.MTD_ADDRESS__vkReleaseProfilingLockKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkReleaseProfilingLockKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetImageMemoryRequirements2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetImageMemoryRequirements2KHR"));
            this.MTD__vkGetImageMemoryRequirements2KHR = this.MTD_ADDRESS__vkGetImageMemoryRequirements2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetImageMemoryRequirements2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetBufferMemoryRequirements2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetBufferMemoryRequirements2KHR"));
            this.MTD__vkGetBufferMemoryRequirements2KHR = this.MTD_ADDRESS__vkGetBufferMemoryRequirements2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetBufferMemoryRequirements2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetImageSparseMemoryRequirements2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetImageSparseMemoryRequirements2KHR"));
            this.MTD__vkGetImageSparseMemoryRequirements2KHR = this.MTD_ADDRESS__vkGetImageSparseMemoryRequirements2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetImageSparseMemoryRequirements2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateSamplerYcbcrConversionKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateSamplerYcbcrConversionKHR"));
            this.MTD__vkCreateSamplerYcbcrConversionKHR = this.MTD_ADDRESS__vkCreateSamplerYcbcrConversionKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateSamplerYcbcrConversionKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroySamplerYcbcrConversionKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroySamplerYcbcrConversionKHR"));
            this.MTD__vkDestroySamplerYcbcrConversionKHR = this.MTD_ADDRESS__vkDestroySamplerYcbcrConversionKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroySamplerYcbcrConversionKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkBindBufferMemory2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkBindBufferMemory2KHR"));
            this.MTD__vkBindBufferMemory2KHR = this.MTD_ADDRESS__vkBindBufferMemory2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkBindBufferMemory2KHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkBindImageMemory2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkBindImageMemory2KHR"));
            this.MTD__vkBindImageMemory2KHR = this.MTD_ADDRESS__vkBindImageMemory2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkBindImageMemory2KHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDescriptorSetLayoutSupportKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDescriptorSetLayoutSupportKHR"));
            this.MTD__vkGetDescriptorSetLayoutSupportKHR = this.MTD_ADDRESS__vkGetDescriptorSetLayoutSupportKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDescriptorSetLayoutSupportKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetSemaphoreCounterValueKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetSemaphoreCounterValueKHR"));
            this.MTD__vkGetSemaphoreCounterValueKHR = this.MTD_ADDRESS__vkGetSemaphoreCounterValueKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetSemaphoreCounterValueKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkWaitSemaphoresKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkWaitSemaphoresKHR"));
            this.MTD__vkWaitSemaphoresKHR = this.MTD_ADDRESS__vkWaitSemaphoresKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkWaitSemaphoresKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkSignalSemaphoreKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkSignalSemaphoreKHR"));
            this.MTD__vkSignalSemaphoreKHR = this.MTD_ADDRESS__vkSignalSemaphoreKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkSignalSemaphoreKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkWaitForPresentKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkWaitForPresentKHR"));
            this.MTD__vkWaitForPresentKHR = this.MTD_ADDRESS__vkWaitForPresentKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkWaitForPresentKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkGetBufferDeviceAddressKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetBufferDeviceAddressKHR"));
            this.MTD__vkGetBufferDeviceAddressKHR = this.MTD_ADDRESS__vkGetBufferDeviceAddressKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetBufferDeviceAddressKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetBufferOpaqueCaptureAddressKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetBufferOpaqueCaptureAddressKHR"));
            this.MTD__vkGetBufferOpaqueCaptureAddressKHR = this.MTD_ADDRESS__vkGetBufferOpaqueCaptureAddressKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetBufferOpaqueCaptureAddressKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceMemoryOpaqueCaptureAddressKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceMemoryOpaqueCaptureAddressKHR"));
            this.MTD__vkGetDeviceMemoryOpaqueCaptureAddressKHR = this.MTD_ADDRESS__vkGetDeviceMemoryOpaqueCaptureAddressKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceMemoryOpaqueCaptureAddressKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateDeferredOperationKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateDeferredOperationKHR"));
            this.MTD__vkCreateDeferredOperationKHR = this.MTD_ADDRESS__vkCreateDeferredOperationKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateDeferredOperationKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyDeferredOperationKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyDeferredOperationKHR"));
            this.MTD__vkDestroyDeferredOperationKHR = this.MTD_ADDRESS__vkDestroyDeferredOperationKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyDeferredOperationKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeferredOperationMaxConcurrencyKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeferredOperationMaxConcurrencyKHR"));
            this.MTD__vkGetDeferredOperationMaxConcurrencyKHR = this.MTD_ADDRESS__vkGetDeferredOperationMaxConcurrencyKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeferredOperationMaxConcurrencyKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeferredOperationResultKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeferredOperationResultKHR"));
            this.MTD__vkGetDeferredOperationResultKHR = this.MTD_ADDRESS__vkGetDeferredOperationResultKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeferredOperationResultKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDeferredOperationJoinKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDeferredOperationJoinKHR"));
            this.MTD__vkDeferredOperationJoinKHR = this.MTD_ADDRESS__vkDeferredOperationJoinKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDeferredOperationJoinKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetPipelineExecutablePropertiesKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetPipelineExecutablePropertiesKHR"));
            this.MTD__vkGetPipelineExecutablePropertiesKHR = this.MTD_ADDRESS__vkGetPipelineExecutablePropertiesKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetPipelineExecutablePropertiesKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetPipelineExecutableStatisticsKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetPipelineExecutableStatisticsKHR"));
            this.MTD__vkGetPipelineExecutableStatisticsKHR = this.MTD_ADDRESS__vkGetPipelineExecutableStatisticsKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetPipelineExecutableStatisticsKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetPipelineExecutableInternalRepresentationsKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetPipelineExecutableInternalRepresentationsKHR"));
            this.MTD__vkGetPipelineExecutableInternalRepresentationsKHR = this.MTD_ADDRESS__vkGetPipelineExecutableInternalRepresentationsKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetPipelineExecutableInternalRepresentationsKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkMapMemory2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkMapMemory2KHR"));
            this.MTD__vkMapMemory2KHR = this.MTD_ADDRESS__vkMapMemory2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkMapMemory2KHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkUnmapMemory2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkUnmapMemory2KHR"));
            this.MTD__vkUnmapMemory2KHR = this.MTD_ADDRESS__vkUnmapMemory2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkUnmapMemory2KHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetEncodedVideoSessionParametersKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetEncodedVideoSessionParametersKHR"));
            this.MTD__vkGetEncodedVideoSessionParametersKHR = this.MTD_ADDRESS__vkGetEncodedVideoSessionParametersKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetEncodedVideoSessionParametersKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceBufferMemoryRequirementsKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceBufferMemoryRequirementsKHR"));
            this.MTD__vkGetDeviceBufferMemoryRequirementsKHR = this.MTD_ADDRESS__vkGetDeviceBufferMemoryRequirementsKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceBufferMemoryRequirementsKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceImageMemoryRequirementsKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceImageMemoryRequirementsKHR"));
            this.MTD__vkGetDeviceImageMemoryRequirementsKHR = this.MTD_ADDRESS__vkGetDeviceImageMemoryRequirementsKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceImageMemoryRequirementsKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceImageSparseMemoryRequirementsKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceImageSparseMemoryRequirementsKHR"));
            this.MTD__vkGetDeviceImageSparseMemoryRequirementsKHR = this.MTD_ADDRESS__vkGetDeviceImageSparseMemoryRequirementsKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceImageSparseMemoryRequirementsKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetRenderingAreaGranularityKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetRenderingAreaGranularityKHR"));
            this.MTD__vkGetRenderingAreaGranularityKHR = this.MTD_ADDRESS__vkGetRenderingAreaGranularityKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetRenderingAreaGranularityKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceImageSubresourceLayoutKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceImageSubresourceLayoutKHR"));
            this.MTD__vkGetDeviceImageSubresourceLayoutKHR = this.MTD_ADDRESS__vkGetDeviceImageSubresourceLayoutKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceImageSubresourceLayoutKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetImageSubresourceLayout2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetImageSubresourceLayout2KHR"));
            this.MTD__vkGetImageSubresourceLayout2KHR = this.MTD_ADDRESS__vkGetImageSubresourceLayout2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetImageSubresourceLayout2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetCalibratedTimestampsKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetCalibratedTimestampsKHR"));
            this.MTD__vkGetCalibratedTimestampsKHR = this.MTD_ADDRESS__vkGetCalibratedTimestampsKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetCalibratedTimestampsKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDebugMarkerSetObjectTagEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDebugMarkerSetObjectTagEXT"));
            this.MTD__vkDebugMarkerSetObjectTagEXT = this.MTD_ADDRESS__vkDebugMarkerSetObjectTagEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDebugMarkerSetObjectTagEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDebugMarkerSetObjectNameEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDebugMarkerSetObjectNameEXT"));
            this.MTD__vkDebugMarkerSetObjectNameEXT = this.MTD_ADDRESS__vkDebugMarkerSetObjectNameEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDebugMarkerSetObjectNameEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateCuModuleNVX = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateCuModuleNVX"));
            this.MTD__vkCreateCuModuleNVX = this.MTD_ADDRESS__vkCreateCuModuleNVX.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateCuModuleNVX, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateCuFunctionNVX = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateCuFunctionNVX"));
            this.MTD__vkCreateCuFunctionNVX = this.MTD_ADDRESS__vkCreateCuFunctionNVX.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateCuFunctionNVX, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyCuModuleNVX = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyCuModuleNVX"));
            this.MTD__vkDestroyCuModuleNVX = this.MTD_ADDRESS__vkDestroyCuModuleNVX.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyCuModuleNVX, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyCuFunctionNVX = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyCuFunctionNVX"));
            this.MTD__vkDestroyCuFunctionNVX = this.MTD_ADDRESS__vkDestroyCuFunctionNVX.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyCuFunctionNVX, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetImageViewHandleNVX = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetImageViewHandleNVX"));
            this.MTD__vkGetImageViewHandleNVX = this.MTD_ADDRESS__vkGetImageViewHandleNVX.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetImageViewHandleNVX, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetImageViewAddressNVX = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetImageViewAddressNVX"));
            this.MTD__vkGetImageViewAddressNVX = this.MTD_ADDRESS__vkGetImageViewAddressNVX.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetImageViewAddressNVX, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetShaderInfoAMD = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetShaderInfoAMD"));
            this.MTD__vkGetShaderInfoAMD = this.MTD_ADDRESS__vkGetShaderInfoAMD.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetShaderInfoAMD, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDisplayPowerControlEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDisplayPowerControlEXT"));
            this.MTD__vkDisplayPowerControlEXT = this.MTD_ADDRESS__vkDisplayPowerControlEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDisplayPowerControlEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkRegisterDeviceEventEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkRegisterDeviceEventEXT"));
            this.MTD__vkRegisterDeviceEventEXT = this.MTD_ADDRESS__vkRegisterDeviceEventEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkRegisterDeviceEventEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkRegisterDisplayEventEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkRegisterDisplayEventEXT"));
            this.MTD__vkRegisterDisplayEventEXT = this.MTD_ADDRESS__vkRegisterDisplayEventEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkRegisterDisplayEventEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetSwapchainCounterEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetSwapchainCounterEXT"));
            this.MTD__vkGetSwapchainCounterEXT = this.MTD_ADDRESS__vkGetSwapchainCounterEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetSwapchainCounterEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetRefreshCycleDurationGOOGLE = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetRefreshCycleDurationGOOGLE"));
            this.MTD__vkGetRefreshCycleDurationGOOGLE = this.MTD_ADDRESS__vkGetRefreshCycleDurationGOOGLE.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetRefreshCycleDurationGOOGLE, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetPastPresentationTimingGOOGLE = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetPastPresentationTimingGOOGLE"));
            this.MTD__vkGetPastPresentationTimingGOOGLE = this.MTD_ADDRESS__vkGetPastPresentationTimingGOOGLE.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetPastPresentationTimingGOOGLE, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkSetHdrMetadataEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkSetHdrMetadataEXT"));
            this.MTD__vkSetHdrMetadataEXT = this.MTD_ADDRESS__vkSetHdrMetadataEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkSetHdrMetadataEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkSetDebugUtilsObjectNameEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkSetDebugUtilsObjectNameEXT"));
            this.MTD__vkSetDebugUtilsObjectNameEXT = this.MTD_ADDRESS__vkSetDebugUtilsObjectNameEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkSetDebugUtilsObjectNameEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkSetDebugUtilsObjectTagEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkSetDebugUtilsObjectTagEXT"));
            this.MTD__vkSetDebugUtilsObjectTagEXT = this.MTD_ADDRESS__vkSetDebugUtilsObjectTagEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkSetDebugUtilsObjectTagEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetImageDrmFormatModifierPropertiesEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetImageDrmFormatModifierPropertiesEXT"));
            this.MTD__vkGetImageDrmFormatModifierPropertiesEXT = this.MTD_ADDRESS__vkGetImageDrmFormatModifierPropertiesEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetImageDrmFormatModifierPropertiesEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateValidationCacheEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateValidationCacheEXT"));
            this.MTD__vkCreateValidationCacheEXT = this.MTD_ADDRESS__vkCreateValidationCacheEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateValidationCacheEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyValidationCacheEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyValidationCacheEXT"));
            this.MTD__vkDestroyValidationCacheEXT = this.MTD_ADDRESS__vkDestroyValidationCacheEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyValidationCacheEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkMergeValidationCachesEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkMergeValidationCachesEXT"));
            this.MTD__vkMergeValidationCachesEXT = this.MTD_ADDRESS__vkMergeValidationCachesEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkMergeValidationCachesEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetValidationCacheDataEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetValidationCacheDataEXT"));
            this.MTD__vkGetValidationCacheDataEXT = this.MTD_ADDRESS__vkGetValidationCacheDataEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetValidationCacheDataEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateAccelerationStructureNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateAccelerationStructureNV"));
            this.MTD__vkCreateAccelerationStructureNV = this.MTD_ADDRESS__vkCreateAccelerationStructureNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateAccelerationStructureNV, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyAccelerationStructureNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyAccelerationStructureNV"));
            this.MTD__vkDestroyAccelerationStructureNV = this.MTD_ADDRESS__vkDestroyAccelerationStructureNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyAccelerationStructureNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetAccelerationStructureMemoryRequirementsNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetAccelerationStructureMemoryRequirementsNV"));
            this.MTD__vkGetAccelerationStructureMemoryRequirementsNV = this.MTD_ADDRESS__vkGetAccelerationStructureMemoryRequirementsNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetAccelerationStructureMemoryRequirementsNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkBindAccelerationStructureMemoryNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkBindAccelerationStructureMemoryNV"));
            this.MTD__vkBindAccelerationStructureMemoryNV = this.MTD_ADDRESS__vkBindAccelerationStructureMemoryNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkBindAccelerationStructureMemoryNV, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateRayTracingPipelinesNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateRayTracingPipelinesNV"));
            this.MTD__vkCreateRayTracingPipelinesNV = this.MTD_ADDRESS__vkCreateRayTracingPipelinesNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateRayTracingPipelinesNV, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetRayTracingShaderGroupHandlesKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetRayTracingShaderGroupHandlesKHR"));
            this.MTD__vkGetRayTracingShaderGroupHandlesKHR = this.MTD_ADDRESS__vkGetRayTracingShaderGroupHandlesKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetRayTracingShaderGroupHandlesKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetRayTracingShaderGroupHandlesNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetRayTracingShaderGroupHandlesNV"));
            this.MTD__vkGetRayTracingShaderGroupHandlesNV = this.MTD_ADDRESS__vkGetRayTracingShaderGroupHandlesNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetRayTracingShaderGroupHandlesNV, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetAccelerationStructureHandleNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetAccelerationStructureHandleNV"));
            this.MTD__vkGetAccelerationStructureHandleNV = this.MTD_ADDRESS__vkGetAccelerationStructureHandleNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetAccelerationStructureHandleNV, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCompileDeferredNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCompileDeferredNV"));
            this.MTD__vkCompileDeferredNV = this.MTD_ADDRESS__vkCompileDeferredNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCompileDeferredNV, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkGetMemoryHostPointerPropertiesEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetMemoryHostPointerPropertiesEXT"));
            this.MTD__vkGetMemoryHostPointerPropertiesEXT = this.MTD_ADDRESS__vkGetMemoryHostPointerPropertiesEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetMemoryHostPointerPropertiesEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetCalibratedTimestampsEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetCalibratedTimestampsEXT"));
            this.MTD__vkGetCalibratedTimestampsEXT = this.MTD_ADDRESS__vkGetCalibratedTimestampsEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetCalibratedTimestampsEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkInitializePerformanceApiINTEL = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkInitializePerformanceApiINTEL"));
            this.MTD__vkInitializePerformanceApiINTEL = this.MTD_ADDRESS__vkInitializePerformanceApiINTEL.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkInitializePerformanceApiINTEL, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkUninitializePerformanceApiINTEL = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkUninitializePerformanceApiINTEL"));
            this.MTD__vkUninitializePerformanceApiINTEL = this.MTD_ADDRESS__vkUninitializePerformanceApiINTEL.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkUninitializePerformanceApiINTEL, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkAcquirePerformanceConfigurationINTEL = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkAcquirePerformanceConfigurationINTEL"));
            this.MTD__vkAcquirePerformanceConfigurationINTEL = this.MTD_ADDRESS__vkAcquirePerformanceConfigurationINTEL.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkAcquirePerformanceConfigurationINTEL, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkReleasePerformanceConfigurationINTEL = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkReleasePerformanceConfigurationINTEL"));
            this.MTD__vkReleasePerformanceConfigurationINTEL = this.MTD_ADDRESS__vkReleasePerformanceConfigurationINTEL.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkReleasePerformanceConfigurationINTEL, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetPerformanceParameterINTEL = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetPerformanceParameterINTEL"));
            this.MTD__vkGetPerformanceParameterINTEL = this.MTD_ADDRESS__vkGetPerformanceParameterINTEL.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetPerformanceParameterINTEL, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkSetLocalDimmingAMD = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkSetLocalDimmingAMD"));
            this.MTD__vkSetLocalDimmingAMD = this.MTD_ADDRESS__vkSetLocalDimmingAMD.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkSetLocalDimmingAMD, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkGetBufferDeviceAddressEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetBufferDeviceAddressEXT"));
            this.MTD__vkGetBufferDeviceAddressEXT = this.MTD_ADDRESS__vkGetBufferDeviceAddressEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetBufferDeviceAddressEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkResetQueryPoolEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkResetQueryPoolEXT"));
            this.MTD__vkResetQueryPoolEXT = this.MTD_ADDRESS__vkResetQueryPoolEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkResetQueryPoolEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCopyMemoryToImageEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCopyMemoryToImageEXT"));
            this.MTD__vkCopyMemoryToImageEXT = this.MTD_ADDRESS__vkCopyMemoryToImageEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCopyMemoryToImageEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCopyImageToMemoryEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCopyImageToMemoryEXT"));
            this.MTD__vkCopyImageToMemoryEXT = this.MTD_ADDRESS__vkCopyImageToMemoryEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCopyImageToMemoryEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCopyImageToImageEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCopyImageToImageEXT"));
            this.MTD__vkCopyImageToImageEXT = this.MTD_ADDRESS__vkCopyImageToImageEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCopyImageToImageEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkTransitionImageLayoutEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkTransitionImageLayoutEXT"));
            this.MTD__vkTransitionImageLayoutEXT = this.MTD_ADDRESS__vkTransitionImageLayoutEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkTransitionImageLayoutEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetImageSubresourceLayout2EXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetImageSubresourceLayout2EXT"));
            this.MTD__vkGetImageSubresourceLayout2EXT = this.MTD_ADDRESS__vkGetImageSubresourceLayout2EXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetImageSubresourceLayout2EXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkReleaseSwapchainImagesEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkReleaseSwapchainImagesEXT"));
            this.MTD__vkReleaseSwapchainImagesEXT = this.MTD_ADDRESS__vkReleaseSwapchainImagesEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkReleaseSwapchainImagesEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetGeneratedCommandsMemoryRequirementsNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetGeneratedCommandsMemoryRequirementsNV"));
            this.MTD__vkGetGeneratedCommandsMemoryRequirementsNV = this.MTD_ADDRESS__vkGetGeneratedCommandsMemoryRequirementsNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetGeneratedCommandsMemoryRequirementsNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateIndirectCommandsLayoutNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateIndirectCommandsLayoutNV"));
            this.MTD__vkCreateIndirectCommandsLayoutNV = this.MTD_ADDRESS__vkCreateIndirectCommandsLayoutNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateIndirectCommandsLayoutNV, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyIndirectCommandsLayoutNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyIndirectCommandsLayoutNV"));
            this.MTD__vkDestroyIndirectCommandsLayoutNV = this.MTD_ADDRESS__vkDestroyIndirectCommandsLayoutNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyIndirectCommandsLayoutNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreatePrivateDataSlotEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreatePrivateDataSlotEXT"));
            this.MTD__vkCreatePrivateDataSlotEXT = this.MTD_ADDRESS__vkCreatePrivateDataSlotEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreatePrivateDataSlotEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyPrivateDataSlotEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyPrivateDataSlotEXT"));
            this.MTD__vkDestroyPrivateDataSlotEXT = this.MTD_ADDRESS__vkDestroyPrivateDataSlotEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyPrivateDataSlotEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkSetPrivateDataEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkSetPrivateDataEXT"));
            this.MTD__vkSetPrivateDataEXT = this.MTD_ADDRESS__vkSetPrivateDataEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkSetPrivateDataEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkGetPrivateDataEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetPrivateDataEXT"));
            this.MTD__vkGetPrivateDataEXT = this.MTD_ADDRESS__vkGetPrivateDataEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetPrivateDataEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateCudaModuleNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateCudaModuleNV"));
            this.MTD__vkCreateCudaModuleNV = this.MTD_ADDRESS__vkCreateCudaModuleNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateCudaModuleNV, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetCudaModuleCacheNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetCudaModuleCacheNV"));
            this.MTD__vkGetCudaModuleCacheNV = this.MTD_ADDRESS__vkGetCudaModuleCacheNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetCudaModuleCacheNV, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateCudaFunctionNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateCudaFunctionNV"));
            this.MTD__vkCreateCudaFunctionNV = this.MTD_ADDRESS__vkCreateCudaFunctionNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateCudaFunctionNV, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyCudaModuleNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyCudaModuleNV"));
            this.MTD__vkDestroyCudaModuleNV = this.MTD_ADDRESS__vkDestroyCudaModuleNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyCudaModuleNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyCudaFunctionNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyCudaFunctionNV"));
            this.MTD__vkDestroyCudaFunctionNV = this.MTD_ADDRESS__vkDestroyCudaFunctionNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyCudaFunctionNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDescriptorSetLayoutSizeEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDescriptorSetLayoutSizeEXT"));
            this.MTD__vkGetDescriptorSetLayoutSizeEXT = this.MTD_ADDRESS__vkGetDescriptorSetLayoutSizeEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDescriptorSetLayoutSizeEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDescriptorSetLayoutBindingOffsetEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDescriptorSetLayoutBindingOffsetEXT"));
            this.MTD__vkGetDescriptorSetLayoutBindingOffsetEXT = this.MTD_ADDRESS__vkGetDescriptorSetLayoutBindingOffsetEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDescriptorSetLayoutBindingOffsetEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDescriptorEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDescriptorEXT"));
            this.MTD__vkGetDescriptorEXT = this.MTD_ADDRESS__vkGetDescriptorEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDescriptorEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetBufferOpaqueCaptureDescriptorDataEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetBufferOpaqueCaptureDescriptorDataEXT"));
            this.MTD__vkGetBufferOpaqueCaptureDescriptorDataEXT = this.MTD_ADDRESS__vkGetBufferOpaqueCaptureDescriptorDataEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetBufferOpaqueCaptureDescriptorDataEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetImageOpaqueCaptureDescriptorDataEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetImageOpaqueCaptureDescriptorDataEXT"));
            this.MTD__vkGetImageOpaqueCaptureDescriptorDataEXT = this.MTD_ADDRESS__vkGetImageOpaqueCaptureDescriptorDataEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetImageOpaqueCaptureDescriptorDataEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetImageViewOpaqueCaptureDescriptorDataEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetImageViewOpaqueCaptureDescriptorDataEXT"));
            this.MTD__vkGetImageViewOpaqueCaptureDescriptorDataEXT = this.MTD_ADDRESS__vkGetImageViewOpaqueCaptureDescriptorDataEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetImageViewOpaqueCaptureDescriptorDataEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetSamplerOpaqueCaptureDescriptorDataEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetSamplerOpaqueCaptureDescriptorDataEXT"));
            this.MTD__vkGetSamplerOpaqueCaptureDescriptorDataEXT = this.MTD_ADDRESS__vkGetSamplerOpaqueCaptureDescriptorDataEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetSamplerOpaqueCaptureDescriptorDataEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT"));
            this.MTD__vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT = this.MTD_ADDRESS__vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceFaultInfoEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceFaultInfoEXT"));
            this.MTD__vkGetDeviceFaultInfoEXT = this.MTD_ADDRESS__vkGetDeviceFaultInfoEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceFaultInfoEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI"));
            this.MTD__vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = this.MTD_ADDRESS__vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetMemoryRemoteAddressNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetMemoryRemoteAddressNV"));
            this.MTD__vkGetMemoryRemoteAddressNV = this.MTD_ADDRESS__vkGetMemoryRemoteAddressNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetMemoryRemoteAddressNV, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetPipelinePropertiesEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetPipelinePropertiesEXT"));
            this.MTD__vkGetPipelinePropertiesEXT = this.MTD_ADDRESS__vkGetPipelinePropertiesEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetPipelinePropertiesEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateMicromapEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateMicromapEXT"));
            this.MTD__vkCreateMicromapEXT = this.MTD_ADDRESS__vkCreateMicromapEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateMicromapEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyMicromapEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyMicromapEXT"));
            this.MTD__vkDestroyMicromapEXT = this.MTD_ADDRESS__vkDestroyMicromapEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyMicromapEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkBuildMicromapsEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkBuildMicromapsEXT"));
            this.MTD__vkBuildMicromapsEXT = this.MTD_ADDRESS__vkBuildMicromapsEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkBuildMicromapsEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCopyMicromapEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCopyMicromapEXT"));
            this.MTD__vkCopyMicromapEXT = this.MTD_ADDRESS__vkCopyMicromapEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCopyMicromapEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCopyMicromapToMemoryEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCopyMicromapToMemoryEXT"));
            this.MTD__vkCopyMicromapToMemoryEXT = this.MTD_ADDRESS__vkCopyMicromapToMemoryEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCopyMicromapToMemoryEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCopyMemoryToMicromapEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCopyMemoryToMicromapEXT"));
            this.MTD__vkCopyMemoryToMicromapEXT = this.MTD_ADDRESS__vkCopyMemoryToMicromapEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCopyMemoryToMicromapEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkWriteMicromapsPropertiesEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkWriteMicromapsPropertiesEXT"));
            this.MTD__vkWriteMicromapsPropertiesEXT = this.MTD_ADDRESS__vkWriteMicromapsPropertiesEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkWriteMicromapsPropertiesEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkGetDeviceMicromapCompatibilityEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceMicromapCompatibilityEXT"));
            this.MTD__vkGetDeviceMicromapCompatibilityEXT = this.MTD_ADDRESS__vkGetDeviceMicromapCompatibilityEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceMicromapCompatibilityEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetMicromapBuildSizesEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetMicromapBuildSizesEXT"));
            this.MTD__vkGetMicromapBuildSizesEXT = this.MTD_ADDRESS__vkGetMicromapBuildSizesEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetMicromapBuildSizesEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkSetDeviceMemoryPriorityEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkSetDeviceMemoryPriorityEXT"));
            this.MTD__vkSetDeviceMemoryPriorityEXT = this.MTD_ADDRESS__vkSetDeviceMemoryPriorityEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkSetDeviceMemoryPriorityEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_FLOAT));
            this.MTD_ADDRESS__vkGetDescriptorSetLayoutHostMappingInfoVALVE = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDescriptorSetLayoutHostMappingInfoVALVE"));
            this.MTD__vkGetDescriptorSetLayoutHostMappingInfoVALVE = this.MTD_ADDRESS__vkGetDescriptorSetLayoutHostMappingInfoVALVE.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDescriptorSetLayoutHostMappingInfoVALVE, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDescriptorSetHostMappingVALVE = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDescriptorSetHostMappingVALVE"));
            this.MTD__vkGetDescriptorSetHostMappingVALVE = this.MTD_ADDRESS__vkGetDescriptorSetHostMappingVALVE.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDescriptorSetHostMappingVALVE, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetPipelineIndirectMemoryRequirementsNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetPipelineIndirectMemoryRequirementsNV"));
            this.MTD__vkGetPipelineIndirectMemoryRequirementsNV = this.MTD_ADDRESS__vkGetPipelineIndirectMemoryRequirementsNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetPipelineIndirectMemoryRequirementsNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetPipelineIndirectDeviceAddressNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetPipelineIndirectDeviceAddressNV"));
            this.MTD__vkGetPipelineIndirectDeviceAddressNV = this.MTD_ADDRESS__vkGetPipelineIndirectDeviceAddressNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetPipelineIndirectDeviceAddressNV, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetShaderModuleIdentifierEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetShaderModuleIdentifierEXT"));
            this.MTD__vkGetShaderModuleIdentifierEXT = this.MTD_ADDRESS__vkGetShaderModuleIdentifierEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetShaderModuleIdentifierEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetShaderModuleCreateInfoIdentifierEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetShaderModuleCreateInfoIdentifierEXT"));
            this.MTD__vkGetShaderModuleCreateInfoIdentifierEXT = this.MTD_ADDRESS__vkGetShaderModuleCreateInfoIdentifierEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetShaderModuleCreateInfoIdentifierEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateOpticalFlowSessionNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateOpticalFlowSessionNV"));
            this.MTD__vkCreateOpticalFlowSessionNV = this.MTD_ADDRESS__vkCreateOpticalFlowSessionNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateOpticalFlowSessionNV, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyOpticalFlowSessionNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyOpticalFlowSessionNV"));
            this.MTD__vkDestroyOpticalFlowSessionNV = this.MTD_ADDRESS__vkDestroyOpticalFlowSessionNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyOpticalFlowSessionNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkBindOpticalFlowSessionImageNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkBindOpticalFlowSessionImageNV"));
            this.MTD__vkBindOpticalFlowSessionImageNV = this.MTD_ADDRESS__vkBindOpticalFlowSessionImageNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkBindOpticalFlowSessionImageNV, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCreateShadersEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateShadersEXT"));
            this.MTD__vkCreateShadersEXT = this.MTD_ADDRESS__vkCreateShadersEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateShadersEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyShaderEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyShaderEXT"));
            this.MTD__vkDestroyShaderEXT = this.MTD_ADDRESS__vkDestroyShaderEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyShaderEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetShaderBinaryDataEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetShaderBinaryDataEXT"));
            this.MTD__vkGetShaderBinaryDataEXT = this.MTD_ADDRESS__vkGetShaderBinaryDataEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetShaderBinaryDataEXT, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetFramebufferTilePropertiesQCOM = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetFramebufferTilePropertiesQCOM"));
            this.MTD__vkGetFramebufferTilePropertiesQCOM = this.MTD_ADDRESS__vkGetFramebufferTilePropertiesQCOM.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetFramebufferTilePropertiesQCOM, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDynamicRenderingTilePropertiesQCOM = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDynamicRenderingTilePropertiesQCOM"));
            this.MTD__vkGetDynamicRenderingTilePropertiesQCOM = this.MTD_ADDRESS__vkGetDynamicRenderingTilePropertiesQCOM.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDynamicRenderingTilePropertiesQCOM, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkSetLatencySleepModeNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkSetLatencySleepModeNV"));
            this.MTD__vkSetLatencySleepModeNV = this.MTD_ADDRESS__vkSetLatencySleepModeNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkSetLatencySleepModeNV, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkLatencySleepNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkLatencySleepNV"));
            this.MTD__vkLatencySleepNV = this.MTD_ADDRESS__vkLatencySleepNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkLatencySleepNV, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkSetLatencyMarkerNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkSetLatencyMarkerNV"));
            this.MTD__vkSetLatencyMarkerNV = this.MTD_ADDRESS__vkSetLatencyMarkerNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkSetLatencyMarkerNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetLatencyTimingsNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetLatencyTimingsNV"));
            this.MTD__vkGetLatencyTimingsNV = this.MTD_ADDRESS__vkGetLatencyTimingsNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetLatencyTimingsNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateAccelerationStructureKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateAccelerationStructureKHR"));
            this.MTD__vkCreateAccelerationStructureKHR = this.MTD_ADDRESS__vkCreateAccelerationStructureKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateAccelerationStructureKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkDestroyAccelerationStructureKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkDestroyAccelerationStructureKHR"));
            this.MTD__vkDestroyAccelerationStructureKHR = this.MTD_ADDRESS__vkDestroyAccelerationStructureKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkDestroyAccelerationStructureKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkBuildAccelerationStructuresKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkBuildAccelerationStructuresKHR"));
            this.MTD__vkBuildAccelerationStructuresKHR = this.MTD_ADDRESS__vkBuildAccelerationStructuresKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkBuildAccelerationStructuresKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCopyAccelerationStructureKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCopyAccelerationStructureKHR"));
            this.MTD__vkCopyAccelerationStructureKHR = this.MTD_ADDRESS__vkCopyAccelerationStructureKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCopyAccelerationStructureKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCopyAccelerationStructureToMemoryKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCopyAccelerationStructureToMemoryKHR"));
            this.MTD__vkCopyAccelerationStructureToMemoryKHR = this.MTD_ADDRESS__vkCopyAccelerationStructureToMemoryKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCopyAccelerationStructureToMemoryKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCopyMemoryToAccelerationStructureKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCopyMemoryToAccelerationStructureKHR"));
            this.MTD__vkCopyMemoryToAccelerationStructureKHR = this.MTD_ADDRESS__vkCopyMemoryToAccelerationStructureKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCopyMemoryToAccelerationStructureKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkWriteAccelerationStructuresPropertiesKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkWriteAccelerationStructuresPropertiesKHR"));
            this.MTD__vkWriteAccelerationStructuresPropertiesKHR = this.MTD_ADDRESS__vkWriteAccelerationStructuresPropertiesKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkWriteAccelerationStructuresPropertiesKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkGetAccelerationStructureDeviceAddressKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetAccelerationStructureDeviceAddressKHR"));
            this.MTD__vkGetAccelerationStructureDeviceAddressKHR = this.MTD_ADDRESS__vkGetAccelerationStructureDeviceAddressKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetAccelerationStructureDeviceAddressKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetDeviceAccelerationStructureCompatibilityKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetDeviceAccelerationStructureCompatibilityKHR"));
            this.MTD__vkGetDeviceAccelerationStructureCompatibilityKHR = this.MTD_ADDRESS__vkGetDeviceAccelerationStructureCompatibilityKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetDeviceAccelerationStructureCompatibilityKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetAccelerationStructureBuildSizesKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetAccelerationStructureBuildSizesKHR"));
            this.MTD__vkGetAccelerationStructureBuildSizesKHR = this.MTD_ADDRESS__vkGetAccelerationStructureBuildSizesKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetAccelerationStructureBuildSizesKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCreateRayTracingPipelinesKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCreateRayTracingPipelinesKHR"));
            this.MTD__vkCreateRayTracingPipelinesKHR = this.MTD_ADDRESS__vkCreateRayTracingPipelinesKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCreateRayTracingPipelinesKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetRayTracingCaptureReplayShaderGroupHandlesKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetRayTracingCaptureReplayShaderGroupHandlesKHR"));
            this.MTD__vkGetRayTracingCaptureReplayShaderGroupHandlesKHR = this.MTD_ADDRESS__vkGetRayTracingCaptureReplayShaderGroupHandlesKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetRayTracingCaptureReplayShaderGroupHandlesKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetRayTracingShaderGroupStackSizeKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetRayTracingShaderGroupStackSizeKHR"));
            this.MTD__vkGetRayTracingShaderGroupStackSizeKHR = this.MTD_ADDRESS__vkGetRayTracingShaderGroupStackSizeKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetRayTracingShaderGroupStackSizeKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkQueueSubmit = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkQueueSubmit"));
            this.MTD__vkQueueSubmit = this.MTD_ADDRESS__vkQueueSubmit.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkQueueSubmit, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkQueueWaitIdle = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkQueueWaitIdle"));
            this.MTD__vkQueueWaitIdle = this.MTD_ADDRESS__vkQueueWaitIdle.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkQueueWaitIdle, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkQueueBindSparse = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkQueueBindSparse"));
            this.MTD__vkQueueBindSparse = this.MTD_ADDRESS__vkQueueBindSparse.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkQueueBindSparse, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkBeginCommandBuffer = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkBeginCommandBuffer"));
            this.MTD__vkBeginCommandBuffer = this.MTD_ADDRESS__vkBeginCommandBuffer.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkBeginCommandBuffer, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkEndCommandBuffer = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkEndCommandBuffer"));
            this.MTD__vkEndCommandBuffer = this.MTD_ADDRESS__vkEndCommandBuffer.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkEndCommandBuffer, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkResetCommandBuffer = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkResetCommandBuffer"));
            this.MTD__vkResetCommandBuffer = this.MTD_ADDRESS__vkResetCommandBuffer.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkResetCommandBuffer, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdBindPipeline = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBindPipeline"));
            this.MTD__vkCmdBindPipeline = this.MTD_ADDRESS__vkCmdBindPipeline.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBindPipeline, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetViewport = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetViewport"));
            this.MTD__vkCmdSetViewport = this.MTD_ADDRESS__vkCmdSetViewport.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetViewport, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetScissor = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetScissor"));
            this.MTD__vkCmdSetScissor = this.MTD_ADDRESS__vkCmdSetScissor.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetScissor, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetLineWidth = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetLineWidth"));
            this.MTD__vkCmdSetLineWidth = this.MTD_ADDRESS__vkCmdSetLineWidth.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetLineWidth, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_FLOAT));
            this.MTD_ADDRESS__vkCmdSetDepthBias = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDepthBias"));
            this.MTD__vkCmdSetDepthBias = this.MTD_ADDRESS__vkCmdSetDepthBias.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDepthBias, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_FLOAT, java.lang.foreign.ValueLayout.JAVA_FLOAT, java.lang.foreign.ValueLayout.JAVA_FLOAT));
            this.MTD_ADDRESS__vkCmdSetBlendConstants = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetBlendConstants"));
            this.MTD__vkCmdSetBlendConstants = this.MTD_ADDRESS__vkCmdSetBlendConstants.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetBlendConstants, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetDepthBounds = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDepthBounds"));
            this.MTD__vkCmdSetDepthBounds = this.MTD_ADDRESS__vkCmdSetDepthBounds.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDepthBounds, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_FLOAT, java.lang.foreign.ValueLayout.JAVA_FLOAT));
            this.MTD_ADDRESS__vkCmdSetStencilCompareMask = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetStencilCompareMask"));
            this.MTD__vkCmdSetStencilCompareMask = this.MTD_ADDRESS__vkCmdSetStencilCompareMask.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetStencilCompareMask, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetStencilWriteMask = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetStencilWriteMask"));
            this.MTD__vkCmdSetStencilWriteMask = this.MTD_ADDRESS__vkCmdSetStencilWriteMask.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetStencilWriteMask, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetStencilReference = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetStencilReference"));
            this.MTD__vkCmdSetStencilReference = this.MTD_ADDRESS__vkCmdSetStencilReference.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetStencilReference, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdBindDescriptorSets = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBindDescriptorSets"));
            this.MTD__vkCmdBindDescriptorSets = this.MTD_ADDRESS__vkCmdBindDescriptorSets.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBindDescriptorSets, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBindIndexBuffer = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBindIndexBuffer"));
            this.MTD__vkCmdBindIndexBuffer = this.MTD_ADDRESS__vkCmdBindIndexBuffer.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBindIndexBuffer, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdBindVertexBuffers = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBindVertexBuffers"));
            this.MTD__vkCmdBindVertexBuffers = this.MTD_ADDRESS__vkCmdBindVertexBuffers.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBindVertexBuffers, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdDraw = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDraw"));
            this.MTD__vkCmdDraw = this.MTD_ADDRESS__vkCmdDraw.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDraw, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawIndexed = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawIndexed"));
            this.MTD__vkCmdDrawIndexed = this.MTD_ADDRESS__vkCmdDrawIndexed.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawIndexed, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawIndirect = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawIndirect"));
            this.MTD__vkCmdDrawIndirect = this.MTD_ADDRESS__vkCmdDrawIndirect.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawIndirect, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawIndexedIndirect = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawIndexedIndirect"));
            this.MTD__vkCmdDrawIndexedIndirect = this.MTD_ADDRESS__vkCmdDrawIndexedIndirect.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawIndexedIndirect, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDispatch = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDispatch"));
            this.MTD__vkCmdDispatch = this.MTD_ADDRESS__vkCmdDispatch.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDispatch, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDispatchIndirect = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDispatchIndirect"));
            this.MTD__vkCmdDispatchIndirect = this.MTD_ADDRESS__vkCmdDispatchIndirect.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDispatchIndirect, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkCmdCopyBuffer = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyBuffer"));
            this.MTD__vkCmdCopyBuffer = this.MTD_ADDRESS__vkCmdCopyBuffer.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyBuffer, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCopyImage = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyImage"));
            this.MTD__vkCmdCopyImage = this.MTD_ADDRESS__vkCmdCopyImage.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyImage, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBlitImage = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBlitImage"));
            this.MTD__vkCmdBlitImage = this.MTD_ADDRESS__vkCmdBlitImage.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBlitImage, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdCopyBufferToImage = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyBufferToImage"));
            this.MTD__vkCmdCopyBufferToImage = this.MTD_ADDRESS__vkCmdCopyBufferToImage.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyBufferToImage, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCopyImageToBuffer = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyImageToBuffer"));
            this.MTD__vkCmdCopyImageToBuffer = this.MTD_ADDRESS__vkCmdCopyImageToBuffer.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyImageToBuffer, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdUpdateBuffer = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdUpdateBuffer"));
            this.MTD__vkCmdUpdateBuffer = this.MTD_ADDRESS__vkCmdUpdateBuffer.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdUpdateBuffer, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdFillBuffer = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdFillBuffer"));
            this.MTD__vkCmdFillBuffer = this.MTD_ADDRESS__vkCmdFillBuffer.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdFillBuffer, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdClearColorImage = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdClearColorImage"));
            this.MTD__vkCmdClearColorImage = this.MTD_ADDRESS__vkCmdClearColorImage.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdClearColorImage, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdClearDepthStencilImage = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdClearDepthStencilImage"));
            this.MTD__vkCmdClearDepthStencilImage = this.MTD_ADDRESS__vkCmdClearDepthStencilImage.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdClearDepthStencilImage, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdClearAttachments = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdClearAttachments"));
            this.MTD__vkCmdClearAttachments = this.MTD_ADDRESS__vkCmdClearAttachments.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdClearAttachments, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdResolveImage = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdResolveImage"));
            this.MTD__vkCmdResolveImage = this.MTD_ADDRESS__vkCmdResolveImage.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdResolveImage, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetEvent = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetEvent"));
            this.MTD__vkCmdSetEvent = this.MTD_ADDRESS__vkCmdSetEvent.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetEvent, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdResetEvent = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdResetEvent"));
            this.MTD__vkCmdResetEvent = this.MTD_ADDRESS__vkCmdResetEvent.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdResetEvent, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdWaitEvents = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdWaitEvents"));
            this.MTD__vkCmdWaitEvents = this.MTD_ADDRESS__vkCmdWaitEvents.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdWaitEvents, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdPipelineBarrier = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdPipelineBarrier"));
            this.MTD__vkCmdPipelineBarrier = this.MTD_ADDRESS__vkCmdPipelineBarrier.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdPipelineBarrier, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBeginQuery = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBeginQuery"));
            this.MTD__vkCmdBeginQuery = this.MTD_ADDRESS__vkCmdBeginQuery.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBeginQuery, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdEndQuery = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdEndQuery"));
            this.MTD__vkCmdEndQuery = this.MTD_ADDRESS__vkCmdEndQuery.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdEndQuery, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdResetQueryPool = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdResetQueryPool"));
            this.MTD__vkCmdResetQueryPool = this.MTD_ADDRESS__vkCmdResetQueryPool.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdResetQueryPool, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdWriteTimestamp = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdWriteTimestamp"));
            this.MTD__vkCmdWriteTimestamp = this.MTD_ADDRESS__vkCmdWriteTimestamp.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdWriteTimestamp, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdCopyQueryPoolResults = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyQueryPoolResults"));
            this.MTD__vkCmdCopyQueryPoolResults = this.MTD_ADDRESS__vkCmdCopyQueryPoolResults.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyQueryPoolResults, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdPushConstants = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdPushConstants"));
            this.MTD__vkCmdPushConstants = this.MTD_ADDRESS__vkCmdPushConstants.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdPushConstants, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBeginRenderPass = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBeginRenderPass"));
            this.MTD__vkCmdBeginRenderPass = this.MTD_ADDRESS__vkCmdBeginRenderPass.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBeginRenderPass, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdNextSubpass = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdNextSubpass"));
            this.MTD__vkCmdNextSubpass = this.MTD_ADDRESS__vkCmdNextSubpass.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdNextSubpass, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdEndRenderPass = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdEndRenderPass"));
            this.MTD__vkCmdEndRenderPass = this.MTD_ADDRESS__vkCmdEndRenderPass.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdEndRenderPass, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdExecuteCommands = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdExecuteCommands"));
            this.MTD__vkCmdExecuteCommands = this.MTD_ADDRESS__vkCmdExecuteCommands.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdExecuteCommands, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetDeviceMask = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDeviceMask"));
            this.MTD__vkCmdSetDeviceMask = this.MTD_ADDRESS__vkCmdSetDeviceMask.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDeviceMask, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDispatchBase = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDispatchBase"));
            this.MTD__vkCmdDispatchBase = this.MTD_ADDRESS__vkCmdDispatchBase.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDispatchBase, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawIndirectCount = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawIndirectCount"));
            this.MTD__vkCmdDrawIndirectCount = this.MTD_ADDRESS__vkCmdDrawIndirectCount.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawIndirectCount, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawIndexedIndirectCount = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawIndexedIndirectCount"));
            this.MTD__vkCmdDrawIndexedIndirectCount = this.MTD_ADDRESS__vkCmdDrawIndexedIndirectCount.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawIndexedIndirectCount, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdBeginRenderPass2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBeginRenderPass2"));
            this.MTD__vkCmdBeginRenderPass2 = this.MTD_ADDRESS__vkCmdBeginRenderPass2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBeginRenderPass2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdNextSubpass2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdNextSubpass2"));
            this.MTD__vkCmdNextSubpass2 = this.MTD_ADDRESS__vkCmdNextSubpass2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdNextSubpass2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdEndRenderPass2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdEndRenderPass2"));
            this.MTD__vkCmdEndRenderPass2 = this.MTD_ADDRESS__vkCmdEndRenderPass2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdEndRenderPass2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetEvent2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetEvent2"));
            this.MTD__vkCmdSetEvent2 = this.MTD_ADDRESS__vkCmdSetEvent2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetEvent2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdResetEvent2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdResetEvent2"));
            this.MTD__vkCmdResetEvent2 = this.MTD_ADDRESS__vkCmdResetEvent2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdResetEvent2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkCmdWaitEvents2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdWaitEvents2"));
            this.MTD__vkCmdWaitEvents2 = this.MTD_ADDRESS__vkCmdWaitEvents2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdWaitEvents2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdPipelineBarrier2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdPipelineBarrier2"));
            this.MTD__vkCmdPipelineBarrier2 = this.MTD_ADDRESS__vkCmdPipelineBarrier2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdPipelineBarrier2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdWriteTimestamp2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdWriteTimestamp2"));
            this.MTD__vkCmdWriteTimestamp2 = this.MTD_ADDRESS__vkCmdWriteTimestamp2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdWriteTimestamp2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkQueueSubmit2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkQueueSubmit2"));
            this.MTD__vkQueueSubmit2 = this.MTD_ADDRESS__vkQueueSubmit2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkQueueSubmit2, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCopyBuffer2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyBuffer2"));
            this.MTD__vkCmdCopyBuffer2 = this.MTD_ADDRESS__vkCmdCopyBuffer2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyBuffer2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCopyImage2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyImage2"));
            this.MTD__vkCmdCopyImage2 = this.MTD_ADDRESS__vkCmdCopyImage2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyImage2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCopyBufferToImage2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyBufferToImage2"));
            this.MTD__vkCmdCopyBufferToImage2 = this.MTD_ADDRESS__vkCmdCopyBufferToImage2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyBufferToImage2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCopyImageToBuffer2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyImageToBuffer2"));
            this.MTD__vkCmdCopyImageToBuffer2 = this.MTD_ADDRESS__vkCmdCopyImageToBuffer2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyImageToBuffer2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBlitImage2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBlitImage2"));
            this.MTD__vkCmdBlitImage2 = this.MTD_ADDRESS__vkCmdBlitImage2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBlitImage2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdResolveImage2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdResolveImage2"));
            this.MTD__vkCmdResolveImage2 = this.MTD_ADDRESS__vkCmdResolveImage2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdResolveImage2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBeginRendering = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBeginRendering"));
            this.MTD__vkCmdBeginRendering = this.MTD_ADDRESS__vkCmdBeginRendering.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBeginRendering, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdEndRendering = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdEndRendering"));
            this.MTD__vkCmdEndRendering = this.MTD_ADDRESS__vkCmdEndRendering.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdEndRendering, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetCullMode = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetCullMode"));
            this.MTD__vkCmdSetCullMode = this.MTD_ADDRESS__vkCmdSetCullMode.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetCullMode, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetFrontFace = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetFrontFace"));
            this.MTD__vkCmdSetFrontFace = this.MTD_ADDRESS__vkCmdSetFrontFace.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetFrontFace, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetPrimitiveTopology = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetPrimitiveTopology"));
            this.MTD__vkCmdSetPrimitiveTopology = this.MTD_ADDRESS__vkCmdSetPrimitiveTopology.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetPrimitiveTopology, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetViewportWithCount = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetViewportWithCount"));
            this.MTD__vkCmdSetViewportWithCount = this.MTD_ADDRESS__vkCmdSetViewportWithCount.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetViewportWithCount, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetScissorWithCount = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetScissorWithCount"));
            this.MTD__vkCmdSetScissorWithCount = this.MTD_ADDRESS__vkCmdSetScissorWithCount.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetScissorWithCount, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBindVertexBuffers2 = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBindVertexBuffers2"));
            this.MTD__vkCmdBindVertexBuffers2 = this.MTD_ADDRESS__vkCmdBindVertexBuffers2.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBindVertexBuffers2, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetDepthTestEnable = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDepthTestEnable"));
            this.MTD__vkCmdSetDepthTestEnable = this.MTD_ADDRESS__vkCmdSetDepthTestEnable.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDepthTestEnable, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetDepthWriteEnable = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDepthWriteEnable"));
            this.MTD__vkCmdSetDepthWriteEnable = this.MTD_ADDRESS__vkCmdSetDepthWriteEnable.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDepthWriteEnable, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetDepthCompareOp = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDepthCompareOp"));
            this.MTD__vkCmdSetDepthCompareOp = this.MTD_ADDRESS__vkCmdSetDepthCompareOp.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDepthCompareOp, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetDepthBoundsTestEnable = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDepthBoundsTestEnable"));
            this.MTD__vkCmdSetDepthBoundsTestEnable = this.MTD_ADDRESS__vkCmdSetDepthBoundsTestEnable.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDepthBoundsTestEnable, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetStencilTestEnable = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetStencilTestEnable"));
            this.MTD__vkCmdSetStencilTestEnable = this.MTD_ADDRESS__vkCmdSetStencilTestEnable.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetStencilTestEnable, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetStencilOp = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetStencilOp"));
            this.MTD__vkCmdSetStencilOp = this.MTD_ADDRESS__vkCmdSetStencilOp.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetStencilOp, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetRasterizerDiscardEnable = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetRasterizerDiscardEnable"));
            this.MTD__vkCmdSetRasterizerDiscardEnable = this.MTD_ADDRESS__vkCmdSetRasterizerDiscardEnable.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetRasterizerDiscardEnable, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetDepthBiasEnable = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDepthBiasEnable"));
            this.MTD__vkCmdSetDepthBiasEnable = this.MTD_ADDRESS__vkCmdSetDepthBiasEnable.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDepthBiasEnable, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetPrimitiveRestartEnable = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetPrimitiveRestartEnable"));
            this.MTD__vkCmdSetPrimitiveRestartEnable = this.MTD_ADDRESS__vkCmdSetPrimitiveRestartEnable.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetPrimitiveRestartEnable, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkQueuePresentKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkQueuePresentKHR"));
            this.MTD__vkQueuePresentKHR = this.MTD_ADDRESS__vkQueuePresentKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkQueuePresentKHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBeginVideoCodingKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBeginVideoCodingKHR"));
            this.MTD__vkCmdBeginVideoCodingKHR = this.MTD_ADDRESS__vkCmdBeginVideoCodingKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBeginVideoCodingKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdEndVideoCodingKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdEndVideoCodingKHR"));
            this.MTD__vkCmdEndVideoCodingKHR = this.MTD_ADDRESS__vkCmdEndVideoCodingKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdEndVideoCodingKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdControlVideoCodingKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdControlVideoCodingKHR"));
            this.MTD__vkCmdControlVideoCodingKHR = this.MTD_ADDRESS__vkCmdControlVideoCodingKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdControlVideoCodingKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdDecodeVideoKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDecodeVideoKHR"));
            this.MTD__vkCmdDecodeVideoKHR = this.MTD_ADDRESS__vkCmdDecodeVideoKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDecodeVideoKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBeginRenderingKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBeginRenderingKHR"));
            this.MTD__vkCmdBeginRenderingKHR = this.MTD_ADDRESS__vkCmdBeginRenderingKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBeginRenderingKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdEndRenderingKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdEndRenderingKHR"));
            this.MTD__vkCmdEndRenderingKHR = this.MTD_ADDRESS__vkCmdEndRenderingKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdEndRenderingKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetDeviceMaskKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDeviceMaskKHR"));
            this.MTD__vkCmdSetDeviceMaskKHR = this.MTD_ADDRESS__vkCmdSetDeviceMaskKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDeviceMaskKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDispatchBaseKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDispatchBaseKHR"));
            this.MTD__vkCmdDispatchBaseKHR = this.MTD_ADDRESS__vkCmdDispatchBaseKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDispatchBaseKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdPushDescriptorSetKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdPushDescriptorSetKHR"));
            this.MTD__vkCmdPushDescriptorSetKHR = this.MTD_ADDRESS__vkCmdPushDescriptorSetKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdPushDescriptorSetKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdPushDescriptorSetWithTemplateKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdPushDescriptorSetWithTemplateKHR"));
            this.MTD__vkCmdPushDescriptorSetWithTemplateKHR = this.MTD_ADDRESS__vkCmdPushDescriptorSetWithTemplateKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdPushDescriptorSetWithTemplateKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBeginRenderPass2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBeginRenderPass2KHR"));
            this.MTD__vkCmdBeginRenderPass2KHR = this.MTD_ADDRESS__vkCmdBeginRenderPass2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBeginRenderPass2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdNextSubpass2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdNextSubpass2KHR"));
            this.MTD__vkCmdNextSubpass2KHR = this.MTD_ADDRESS__vkCmdNextSubpass2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdNextSubpass2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdEndRenderPass2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdEndRenderPass2KHR"));
            this.MTD__vkCmdEndRenderPass2KHR = this.MTD_ADDRESS__vkCmdEndRenderPass2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdEndRenderPass2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdDrawIndirectCountKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawIndirectCountKHR"));
            this.MTD__vkCmdDrawIndirectCountKHR = this.MTD_ADDRESS__vkCmdDrawIndirectCountKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawIndirectCountKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawIndexedIndirectCountKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawIndexedIndirectCountKHR"));
            this.MTD__vkCmdDrawIndexedIndirectCountKHR = this.MTD_ADDRESS__vkCmdDrawIndexedIndirectCountKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawIndexedIndirectCountKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetFragmentShadingRateKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetFragmentShadingRateKHR"));
            this.MTD__vkCmdSetFragmentShadingRateKHR = this.MTD_ADDRESS__vkCmdSetFragmentShadingRateKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetFragmentShadingRateKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetRenderingAttachmentLocationsKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetRenderingAttachmentLocationsKHR"));
            this.MTD__vkCmdSetRenderingAttachmentLocationsKHR = this.MTD_ADDRESS__vkCmdSetRenderingAttachmentLocationsKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetRenderingAttachmentLocationsKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetRenderingInputAttachmentIndicesKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetRenderingInputAttachmentIndicesKHR"));
            this.MTD__vkCmdSetRenderingInputAttachmentIndicesKHR = this.MTD_ADDRESS__vkCmdSetRenderingInputAttachmentIndicesKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetRenderingInputAttachmentIndicesKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdEncodeVideoKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdEncodeVideoKHR"));
            this.MTD__vkCmdEncodeVideoKHR = this.MTD_ADDRESS__vkCmdEncodeVideoKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdEncodeVideoKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetEvent2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetEvent2KHR"));
            this.MTD__vkCmdSetEvent2KHR = this.MTD_ADDRESS__vkCmdSetEvent2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetEvent2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdResetEvent2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdResetEvent2KHR"));
            this.MTD__vkCmdResetEvent2KHR = this.MTD_ADDRESS__vkCmdResetEvent2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdResetEvent2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkCmdWaitEvents2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdWaitEvents2KHR"));
            this.MTD__vkCmdWaitEvents2KHR = this.MTD_ADDRESS__vkCmdWaitEvents2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdWaitEvents2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdPipelineBarrier2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdPipelineBarrier2KHR"));
            this.MTD__vkCmdPipelineBarrier2KHR = this.MTD_ADDRESS__vkCmdPipelineBarrier2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdPipelineBarrier2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdWriteTimestamp2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdWriteTimestamp2KHR"));
            this.MTD__vkCmdWriteTimestamp2KHR = this.MTD_ADDRESS__vkCmdWriteTimestamp2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdWriteTimestamp2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkQueueSubmit2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkQueueSubmit2KHR"));
            this.MTD__vkQueueSubmit2KHR = this.MTD_ADDRESS__vkQueueSubmit2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkQueueSubmit2KHR, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdWriteBufferMarker2AMD = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdWriteBufferMarker2AMD"));
            this.MTD__vkCmdWriteBufferMarker2AMD = this.MTD_ADDRESS__vkCmdWriteBufferMarker2AMD.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdWriteBufferMarker2AMD, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkGetQueueCheckpointData2NV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetQueueCheckpointData2NV"));
            this.MTD__vkGetQueueCheckpointData2NV = this.MTD_ADDRESS__vkGetQueueCheckpointData2NV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetQueueCheckpointData2NV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCopyBuffer2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyBuffer2KHR"));
            this.MTD__vkCmdCopyBuffer2KHR = this.MTD_ADDRESS__vkCmdCopyBuffer2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyBuffer2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCopyImage2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyImage2KHR"));
            this.MTD__vkCmdCopyImage2KHR = this.MTD_ADDRESS__vkCmdCopyImage2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyImage2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCopyBufferToImage2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyBufferToImage2KHR"));
            this.MTD__vkCmdCopyBufferToImage2KHR = this.MTD_ADDRESS__vkCmdCopyBufferToImage2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyBufferToImage2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCopyImageToBuffer2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyImageToBuffer2KHR"));
            this.MTD__vkCmdCopyImageToBuffer2KHR = this.MTD_ADDRESS__vkCmdCopyImageToBuffer2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyImageToBuffer2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBlitImage2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBlitImage2KHR"));
            this.MTD__vkCmdBlitImage2KHR = this.MTD_ADDRESS__vkCmdBlitImage2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBlitImage2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdResolveImage2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdResolveImage2KHR"));
            this.MTD__vkCmdResolveImage2KHR = this.MTD_ADDRESS__vkCmdResolveImage2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdResolveImage2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdTraceRaysIndirect2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdTraceRaysIndirect2KHR"));
            this.MTD__vkCmdTraceRaysIndirect2KHR = this.MTD_ADDRESS__vkCmdTraceRaysIndirect2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdTraceRaysIndirect2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkCmdBindIndexBuffer2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBindIndexBuffer2KHR"));
            this.MTD__vkCmdBindIndexBuffer2KHR = this.MTD_ADDRESS__vkCmdBindIndexBuffer2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBindIndexBuffer2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetLineStippleKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetLineStippleKHR"));
            this.MTD__vkCmdSetLineStippleKHR = this.MTD_ADDRESS__vkCmdSetLineStippleKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetLineStippleKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_SHORT));
            this.MTD_ADDRESS__vkCmdBindDescriptorSets2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBindDescriptorSets2KHR"));
            this.MTD__vkCmdBindDescriptorSets2KHR = this.MTD_ADDRESS__vkCmdBindDescriptorSets2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBindDescriptorSets2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdPushConstants2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdPushConstants2KHR"));
            this.MTD__vkCmdPushConstants2KHR = this.MTD_ADDRESS__vkCmdPushConstants2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdPushConstants2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdPushDescriptorSet2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdPushDescriptorSet2KHR"));
            this.MTD__vkCmdPushDescriptorSet2KHR = this.MTD_ADDRESS__vkCmdPushDescriptorSet2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdPushDescriptorSet2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdPushDescriptorSetWithTemplate2KHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdPushDescriptorSetWithTemplate2KHR"));
            this.MTD__vkCmdPushDescriptorSetWithTemplate2KHR = this.MTD_ADDRESS__vkCmdPushDescriptorSetWithTemplate2KHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdPushDescriptorSetWithTemplate2KHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetDescriptorBufferOffsets2EXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDescriptorBufferOffsets2EXT"));
            this.MTD__vkCmdSetDescriptorBufferOffsets2EXT = this.MTD_ADDRESS__vkCmdSetDescriptorBufferOffsets2EXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDescriptorBufferOffsets2EXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBindDescriptorBufferEmbeddedSamplers2EXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBindDescriptorBufferEmbeddedSamplers2EXT"));
            this.MTD__vkCmdBindDescriptorBufferEmbeddedSamplers2EXT = this.MTD_ADDRESS__vkCmdBindDescriptorBufferEmbeddedSamplers2EXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBindDescriptorBufferEmbeddedSamplers2EXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdDebugMarkerBeginEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDebugMarkerBeginEXT"));
            this.MTD__vkCmdDebugMarkerBeginEXT = this.MTD_ADDRESS__vkCmdDebugMarkerBeginEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDebugMarkerBeginEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdDebugMarkerEndEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDebugMarkerEndEXT"));
            this.MTD__vkCmdDebugMarkerEndEXT = this.MTD_ADDRESS__vkCmdDebugMarkerEndEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDebugMarkerEndEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdDebugMarkerInsertEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDebugMarkerInsertEXT"));
            this.MTD__vkCmdDebugMarkerInsertEXT = this.MTD_ADDRESS__vkCmdDebugMarkerInsertEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDebugMarkerInsertEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBindTransformFeedbackBuffersEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBindTransformFeedbackBuffersEXT"));
            this.MTD__vkCmdBindTransformFeedbackBuffersEXT = this.MTD_ADDRESS__vkCmdBindTransformFeedbackBuffersEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBindTransformFeedbackBuffersEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBeginTransformFeedbackEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBeginTransformFeedbackEXT"));
            this.MTD__vkCmdBeginTransformFeedbackEXT = this.MTD_ADDRESS__vkCmdBeginTransformFeedbackEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBeginTransformFeedbackEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdEndTransformFeedbackEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdEndTransformFeedbackEXT"));
            this.MTD__vkCmdEndTransformFeedbackEXT = this.MTD_ADDRESS__vkCmdEndTransformFeedbackEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdEndTransformFeedbackEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBeginQueryIndexedEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBeginQueryIndexedEXT"));
            this.MTD__vkCmdBeginQueryIndexedEXT = this.MTD_ADDRESS__vkCmdBeginQueryIndexedEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBeginQueryIndexedEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdEndQueryIndexedEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdEndQueryIndexedEXT"));
            this.MTD__vkCmdEndQueryIndexedEXT = this.MTD_ADDRESS__vkCmdEndQueryIndexedEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdEndQueryIndexedEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawIndirectByteCountEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawIndirectByteCountEXT"));
            this.MTD__vkCmdDrawIndirectByteCountEXT = this.MTD_ADDRESS__vkCmdDrawIndirectByteCountEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawIndirectByteCountEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdCuLaunchKernelNVX = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCuLaunchKernelNVX"));
            this.MTD__vkCmdCuLaunchKernelNVX = this.MTD_ADDRESS__vkCmdCuLaunchKernelNVX.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCuLaunchKernelNVX, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdDrawIndirectCountAMD = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawIndirectCountAMD"));
            this.MTD__vkCmdDrawIndirectCountAMD = this.MTD_ADDRESS__vkCmdDrawIndirectCountAMD.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawIndirectCountAMD, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawIndexedIndirectCountAMD = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawIndexedIndirectCountAMD"));
            this.MTD__vkCmdDrawIndexedIndirectCountAMD = this.MTD_ADDRESS__vkCmdDrawIndexedIndirectCountAMD.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawIndexedIndirectCountAMD, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdBeginConditionalRenderingEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBeginConditionalRenderingEXT"));
            this.MTD__vkCmdBeginConditionalRenderingEXT = this.MTD_ADDRESS__vkCmdBeginConditionalRenderingEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBeginConditionalRenderingEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdEndConditionalRenderingEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdEndConditionalRenderingEXT"));
            this.MTD__vkCmdEndConditionalRenderingEXT = this.MTD_ADDRESS__vkCmdEndConditionalRenderingEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdEndConditionalRenderingEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetViewportWScalingNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetViewportWScalingNV"));
            this.MTD__vkCmdSetViewportWScalingNV = this.MTD_ADDRESS__vkCmdSetViewportWScalingNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetViewportWScalingNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetDiscardRectangleEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDiscardRectangleEXT"));
            this.MTD__vkCmdSetDiscardRectangleEXT = this.MTD_ADDRESS__vkCmdSetDiscardRectangleEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDiscardRectangleEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetDiscardRectangleEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDiscardRectangleEnableEXT"));
            this.MTD__vkCmdSetDiscardRectangleEnableEXT = this.MTD_ADDRESS__vkCmdSetDiscardRectangleEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDiscardRectangleEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetDiscardRectangleModeEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDiscardRectangleModeEXT"));
            this.MTD__vkCmdSetDiscardRectangleModeEXT = this.MTD_ADDRESS__vkCmdSetDiscardRectangleModeEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDiscardRectangleModeEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkQueueBeginDebugUtilsLabelEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkQueueBeginDebugUtilsLabelEXT"));
            this.MTD__vkQueueBeginDebugUtilsLabelEXT = this.MTD_ADDRESS__vkQueueBeginDebugUtilsLabelEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkQueueBeginDebugUtilsLabelEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkQueueEndDebugUtilsLabelEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkQueueEndDebugUtilsLabelEXT"));
            this.MTD__vkQueueEndDebugUtilsLabelEXT = this.MTD_ADDRESS__vkQueueEndDebugUtilsLabelEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkQueueEndDebugUtilsLabelEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkQueueInsertDebugUtilsLabelEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkQueueInsertDebugUtilsLabelEXT"));
            this.MTD__vkQueueInsertDebugUtilsLabelEXT = this.MTD_ADDRESS__vkQueueInsertDebugUtilsLabelEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkQueueInsertDebugUtilsLabelEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBeginDebugUtilsLabelEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBeginDebugUtilsLabelEXT"));
            this.MTD__vkCmdBeginDebugUtilsLabelEXT = this.MTD_ADDRESS__vkCmdBeginDebugUtilsLabelEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBeginDebugUtilsLabelEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdEndDebugUtilsLabelEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdEndDebugUtilsLabelEXT"));
            this.MTD__vkCmdEndDebugUtilsLabelEXT = this.MTD_ADDRESS__vkCmdEndDebugUtilsLabelEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdEndDebugUtilsLabelEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdInsertDebugUtilsLabelEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdInsertDebugUtilsLabelEXT"));
            this.MTD__vkCmdInsertDebugUtilsLabelEXT = this.MTD_ADDRESS__vkCmdInsertDebugUtilsLabelEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdInsertDebugUtilsLabelEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetSampleLocationsEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetSampleLocationsEXT"));
            this.MTD__vkCmdSetSampleLocationsEXT = this.MTD_ADDRESS__vkCmdSetSampleLocationsEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetSampleLocationsEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBindShadingRateImageNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBindShadingRateImageNV"));
            this.MTD__vkCmdBindShadingRateImageNV = this.MTD_ADDRESS__vkCmdBindShadingRateImageNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBindShadingRateImageNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetViewportShadingRatePaletteNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetViewportShadingRatePaletteNV"));
            this.MTD__vkCmdSetViewportShadingRatePaletteNV = this.MTD_ADDRESS__vkCmdSetViewportShadingRatePaletteNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetViewportShadingRatePaletteNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetCoarseSampleOrderNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetCoarseSampleOrderNV"));
            this.MTD__vkCmdSetCoarseSampleOrderNV = this.MTD_ADDRESS__vkCmdSetCoarseSampleOrderNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetCoarseSampleOrderNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBuildAccelerationStructureNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBuildAccelerationStructureNV"));
            this.MTD__vkCmdBuildAccelerationStructureNV = this.MTD_ADDRESS__vkCmdBuildAccelerationStructureNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBuildAccelerationStructureNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkCmdCopyAccelerationStructureNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyAccelerationStructureNV"));
            this.MTD__vkCmdCopyAccelerationStructureNV = this.MTD_ADDRESS__vkCmdCopyAccelerationStructureNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyAccelerationStructureNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdTraceRaysNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdTraceRaysNV"));
            this.MTD__vkCmdTraceRaysNV = this.MTD_ADDRESS__vkCmdTraceRaysNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdTraceRaysNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdWriteAccelerationStructuresPropertiesNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdWriteAccelerationStructuresPropertiesNV"));
            this.MTD__vkCmdWriteAccelerationStructuresPropertiesNV = this.MTD_ADDRESS__vkCmdWriteAccelerationStructuresPropertiesNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdWriteAccelerationStructuresPropertiesNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdWriteBufferMarkerAMD = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdWriteBufferMarkerAMD"));
            this.MTD__vkCmdWriteBufferMarkerAMD = this.MTD_ADDRESS__vkCmdWriteBufferMarkerAMD.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdWriteBufferMarkerAMD, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawMeshTasksNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawMeshTasksNV"));
            this.MTD__vkCmdDrawMeshTasksNV = this.MTD_ADDRESS__vkCmdDrawMeshTasksNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawMeshTasksNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawMeshTasksIndirectNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawMeshTasksIndirectNV"));
            this.MTD__vkCmdDrawMeshTasksIndirectNV = this.MTD_ADDRESS__vkCmdDrawMeshTasksIndirectNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawMeshTasksIndirectNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawMeshTasksIndirectCountNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawMeshTasksIndirectCountNV"));
            this.MTD__vkCmdDrawMeshTasksIndirectCountNV = this.MTD_ADDRESS__vkCmdDrawMeshTasksIndirectCountNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawMeshTasksIndirectCountNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetExclusiveScissorEnableNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetExclusiveScissorEnableNV"));
            this.MTD__vkCmdSetExclusiveScissorEnableNV = this.MTD_ADDRESS__vkCmdSetExclusiveScissorEnableNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetExclusiveScissorEnableNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetExclusiveScissorNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetExclusiveScissorNV"));
            this.MTD__vkCmdSetExclusiveScissorNV = this.MTD_ADDRESS__vkCmdSetExclusiveScissorNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetExclusiveScissorNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetCheckpointNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetCheckpointNV"));
            this.MTD__vkCmdSetCheckpointNV = this.MTD_ADDRESS__vkCmdSetCheckpointNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetCheckpointNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkGetQueueCheckpointDataNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkGetQueueCheckpointDataNV"));
            this.MTD__vkGetQueueCheckpointDataNV = this.MTD_ADDRESS__vkGetQueueCheckpointDataNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkGetQueueCheckpointDataNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetPerformanceMarkerINTEL = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetPerformanceMarkerINTEL"));
            this.MTD__vkCmdSetPerformanceMarkerINTEL = this.MTD_ADDRESS__vkCmdSetPerformanceMarkerINTEL.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetPerformanceMarkerINTEL, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetPerformanceStreamMarkerINTEL = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetPerformanceStreamMarkerINTEL"));
            this.MTD__vkCmdSetPerformanceStreamMarkerINTEL = this.MTD_ADDRESS__vkCmdSetPerformanceStreamMarkerINTEL.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetPerformanceStreamMarkerINTEL, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetPerformanceOverrideINTEL = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetPerformanceOverrideINTEL"));
            this.MTD__vkCmdSetPerformanceOverrideINTEL = this.MTD_ADDRESS__vkCmdSetPerformanceOverrideINTEL.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetPerformanceOverrideINTEL, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkQueueSetPerformanceConfigurationINTEL = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkQueueSetPerformanceConfigurationINTEL"));
            this.MTD__vkQueueSetPerformanceConfigurationINTEL = this.MTD_ADDRESS__vkQueueSetPerformanceConfigurationINTEL.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkQueueSetPerformanceConfigurationINTEL, java.lang.foreign.FunctionDescriptor.of(java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetLineStippleEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetLineStippleEXT"));
            this.MTD__vkCmdSetLineStippleEXT = this.MTD_ADDRESS__vkCmdSetLineStippleEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetLineStippleEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_SHORT));
            this.MTD_ADDRESS__vkCmdSetCullModeEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetCullModeEXT"));
            this.MTD__vkCmdSetCullModeEXT = this.MTD_ADDRESS__vkCmdSetCullModeEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetCullModeEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetFrontFaceEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetFrontFaceEXT"));
            this.MTD__vkCmdSetFrontFaceEXT = this.MTD_ADDRESS__vkCmdSetFrontFaceEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetFrontFaceEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetPrimitiveTopologyEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetPrimitiveTopologyEXT"));
            this.MTD__vkCmdSetPrimitiveTopologyEXT = this.MTD_ADDRESS__vkCmdSetPrimitiveTopologyEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetPrimitiveTopologyEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetViewportWithCountEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetViewportWithCountEXT"));
            this.MTD__vkCmdSetViewportWithCountEXT = this.MTD_ADDRESS__vkCmdSetViewportWithCountEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetViewportWithCountEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetScissorWithCountEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetScissorWithCountEXT"));
            this.MTD__vkCmdSetScissorWithCountEXT = this.MTD_ADDRESS__vkCmdSetScissorWithCountEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetScissorWithCountEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBindVertexBuffers2EXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBindVertexBuffers2EXT"));
            this.MTD__vkCmdBindVertexBuffers2EXT = this.MTD_ADDRESS__vkCmdBindVertexBuffers2EXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBindVertexBuffers2EXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetDepthTestEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDepthTestEnableEXT"));
            this.MTD__vkCmdSetDepthTestEnableEXT = this.MTD_ADDRESS__vkCmdSetDepthTestEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDepthTestEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetDepthWriteEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDepthWriteEnableEXT"));
            this.MTD__vkCmdSetDepthWriteEnableEXT = this.MTD_ADDRESS__vkCmdSetDepthWriteEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDepthWriteEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetDepthCompareOpEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDepthCompareOpEXT"));
            this.MTD__vkCmdSetDepthCompareOpEXT = this.MTD_ADDRESS__vkCmdSetDepthCompareOpEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDepthCompareOpEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetDepthBoundsTestEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDepthBoundsTestEnableEXT"));
            this.MTD__vkCmdSetDepthBoundsTestEnableEXT = this.MTD_ADDRESS__vkCmdSetDepthBoundsTestEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDepthBoundsTestEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetStencilTestEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetStencilTestEnableEXT"));
            this.MTD__vkCmdSetStencilTestEnableEXT = this.MTD_ADDRESS__vkCmdSetStencilTestEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetStencilTestEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetStencilOpEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetStencilOpEXT"));
            this.MTD__vkCmdSetStencilOpEXT = this.MTD_ADDRESS__vkCmdSetStencilOpEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetStencilOpEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdPreprocessGeneratedCommandsNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdPreprocessGeneratedCommandsNV"));
            this.MTD__vkCmdPreprocessGeneratedCommandsNV = this.MTD_ADDRESS__vkCmdPreprocessGeneratedCommandsNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdPreprocessGeneratedCommandsNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdExecuteGeneratedCommandsNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdExecuteGeneratedCommandsNV"));
            this.MTD__vkCmdExecuteGeneratedCommandsNV = this.MTD_ADDRESS__vkCmdExecuteGeneratedCommandsNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdExecuteGeneratedCommandsNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBindPipelineShaderGroupNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBindPipelineShaderGroupNV"));
            this.MTD__vkCmdBindPipelineShaderGroupNV = this.MTD_ADDRESS__vkCmdBindPipelineShaderGroupNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBindPipelineShaderGroupNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetDepthBias2EXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDepthBias2EXT"));
            this.MTD__vkCmdSetDepthBias2EXT = this.MTD_ADDRESS__vkCmdSetDepthBias2EXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDepthBias2EXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCudaLaunchKernelNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCudaLaunchKernelNV"));
            this.MTD__vkCmdCudaLaunchKernelNV = this.MTD_ADDRESS__vkCmdCudaLaunchKernelNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCudaLaunchKernelNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBindDescriptorBuffersEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBindDescriptorBuffersEXT"));
            this.MTD__vkCmdBindDescriptorBuffersEXT = this.MTD_ADDRESS__vkCmdBindDescriptorBuffersEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBindDescriptorBuffersEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetDescriptorBufferOffsetsEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDescriptorBufferOffsetsEXT"));
            this.MTD__vkCmdSetDescriptorBufferOffsetsEXT = this.MTD_ADDRESS__vkCmdSetDescriptorBufferOffsetsEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDescriptorBufferOffsetsEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBindDescriptorBufferEmbeddedSamplersEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBindDescriptorBufferEmbeddedSamplersEXT"));
            this.MTD__vkCmdBindDescriptorBufferEmbeddedSamplersEXT = this.MTD_ADDRESS__vkCmdBindDescriptorBufferEmbeddedSamplersEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBindDescriptorBufferEmbeddedSamplersEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetFragmentShadingRateEnumNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetFragmentShadingRateEnumNV"));
            this.MTD__vkCmdSetFragmentShadingRateEnumNV = this.MTD_ADDRESS__vkCmdSetFragmentShadingRateEnumNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetFragmentShadingRateEnumNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetVertexInputEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetVertexInputEXT"));
            this.MTD__vkCmdSetVertexInputEXT = this.MTD_ADDRESS__vkCmdSetVertexInputEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetVertexInputEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSubpassShadingHUAWEI = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSubpassShadingHUAWEI"));
            this.MTD__vkCmdSubpassShadingHUAWEI = this.MTD_ADDRESS__vkCmdSubpassShadingHUAWEI.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSubpassShadingHUAWEI, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBindInvocationMaskHUAWEI = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBindInvocationMaskHUAWEI"));
            this.MTD__vkCmdBindInvocationMaskHUAWEI = this.MTD_ADDRESS__vkCmdBindInvocationMaskHUAWEI.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBindInvocationMaskHUAWEI, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetPatchControlPointsEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetPatchControlPointsEXT"));
            this.MTD__vkCmdSetPatchControlPointsEXT = this.MTD_ADDRESS__vkCmdSetPatchControlPointsEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetPatchControlPointsEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetRasterizerDiscardEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetRasterizerDiscardEnableEXT"));
            this.MTD__vkCmdSetRasterizerDiscardEnableEXT = this.MTD_ADDRESS__vkCmdSetRasterizerDiscardEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetRasterizerDiscardEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetDepthBiasEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDepthBiasEnableEXT"));
            this.MTD__vkCmdSetDepthBiasEnableEXT = this.MTD_ADDRESS__vkCmdSetDepthBiasEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDepthBiasEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetLogicOpEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetLogicOpEXT"));
            this.MTD__vkCmdSetLogicOpEXT = this.MTD_ADDRESS__vkCmdSetLogicOpEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetLogicOpEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetPrimitiveRestartEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetPrimitiveRestartEnableEXT"));
            this.MTD__vkCmdSetPrimitiveRestartEnableEXT = this.MTD_ADDRESS__vkCmdSetPrimitiveRestartEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetPrimitiveRestartEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetColorWriteEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetColorWriteEnableEXT"));
            this.MTD__vkCmdSetColorWriteEnableEXT = this.MTD_ADDRESS__vkCmdSetColorWriteEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetColorWriteEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdDrawMultiEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawMultiEXT"));
            this.MTD__vkCmdDrawMultiEXT = this.MTD_ADDRESS__vkCmdDrawMultiEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawMultiEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawMultiIndexedEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawMultiIndexedEXT"));
            this.MTD__vkCmdDrawMultiIndexedEXT = this.MTD_ADDRESS__vkCmdDrawMultiIndexedEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawMultiIndexedEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBuildMicromapsEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBuildMicromapsEXT"));
            this.MTD__vkCmdBuildMicromapsEXT = this.MTD_ADDRESS__vkCmdBuildMicromapsEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBuildMicromapsEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCopyMicromapEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyMicromapEXT"));
            this.MTD__vkCmdCopyMicromapEXT = this.MTD_ADDRESS__vkCmdCopyMicromapEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyMicromapEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCopyMicromapToMemoryEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyMicromapToMemoryEXT"));
            this.MTD__vkCmdCopyMicromapToMemoryEXT = this.MTD_ADDRESS__vkCmdCopyMicromapToMemoryEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyMicromapToMemoryEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCopyMemoryToMicromapEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyMemoryToMicromapEXT"));
            this.MTD__vkCmdCopyMemoryToMicromapEXT = this.MTD_ADDRESS__vkCmdCopyMemoryToMicromapEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyMemoryToMicromapEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdWriteMicromapsPropertiesEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdWriteMicromapsPropertiesEXT"));
            this.MTD__vkCmdWriteMicromapsPropertiesEXT = this.MTD_ADDRESS__vkCmdWriteMicromapsPropertiesEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdWriteMicromapsPropertiesEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawClusterHUAWEI = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawClusterHUAWEI"));
            this.MTD__vkCmdDrawClusterHUAWEI = this.MTD_ADDRESS__vkCmdDrawClusterHUAWEI.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawClusterHUAWEI, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawClusterIndirectHUAWEI = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawClusterIndirectHUAWEI"));
            this.MTD__vkCmdDrawClusterIndirectHUAWEI = this.MTD_ADDRESS__vkCmdDrawClusterIndirectHUAWEI.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawClusterIndirectHUAWEI, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkCmdCopyMemoryIndirectNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyMemoryIndirectNV"));
            this.MTD__vkCmdCopyMemoryIndirectNV = this.MTD_ADDRESS__vkCmdCopyMemoryIndirectNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyMemoryIndirectNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdCopyMemoryToImageIndirectNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyMemoryToImageIndirectNV"));
            this.MTD__vkCmdCopyMemoryToImageIndirectNV = this.MTD_ADDRESS__vkCmdCopyMemoryToImageIndirectNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyMemoryToImageIndirectNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdDecompressMemoryNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDecompressMemoryNV"));
            this.MTD__vkCmdDecompressMemoryNV = this.MTD_ADDRESS__vkCmdDecompressMemoryNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDecompressMemoryNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdDecompressMemoryIndirectCountNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDecompressMemoryIndirectCountNV"));
            this.MTD__vkCmdDecompressMemoryIndirectCountNV = this.MTD_ADDRESS__vkCmdDecompressMemoryIndirectCountNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDecompressMemoryIndirectCountNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdUpdatePipelineIndirectBufferNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdUpdatePipelineIndirectBufferNV"));
            this.MTD__vkCmdUpdatePipelineIndirectBufferNV = this.MTD_ADDRESS__vkCmdUpdatePipelineIndirectBufferNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdUpdatePipelineIndirectBufferNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetDepthClampEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDepthClampEnableEXT"));
            this.MTD__vkCmdSetDepthClampEnableEXT = this.MTD_ADDRESS__vkCmdSetDepthClampEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDepthClampEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetPolygonModeEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetPolygonModeEXT"));
            this.MTD__vkCmdSetPolygonModeEXT = this.MTD_ADDRESS__vkCmdSetPolygonModeEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetPolygonModeEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetRasterizationSamplesEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetRasterizationSamplesEXT"));
            this.MTD__vkCmdSetRasterizationSamplesEXT = this.MTD_ADDRESS__vkCmdSetRasterizationSamplesEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetRasterizationSamplesEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetSampleMaskEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetSampleMaskEXT"));
            this.MTD__vkCmdSetSampleMaskEXT = this.MTD_ADDRESS__vkCmdSetSampleMaskEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetSampleMaskEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetAlphaToCoverageEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetAlphaToCoverageEnableEXT"));
            this.MTD__vkCmdSetAlphaToCoverageEnableEXT = this.MTD_ADDRESS__vkCmdSetAlphaToCoverageEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetAlphaToCoverageEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetAlphaToOneEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetAlphaToOneEnableEXT"));
            this.MTD__vkCmdSetAlphaToOneEnableEXT = this.MTD_ADDRESS__vkCmdSetAlphaToOneEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetAlphaToOneEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetLogicOpEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetLogicOpEnableEXT"));
            this.MTD__vkCmdSetLogicOpEnableEXT = this.MTD_ADDRESS__vkCmdSetLogicOpEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetLogicOpEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetColorBlendEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetColorBlendEnableEXT"));
            this.MTD__vkCmdSetColorBlendEnableEXT = this.MTD_ADDRESS__vkCmdSetColorBlendEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetColorBlendEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetColorBlendEquationEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetColorBlendEquationEXT"));
            this.MTD__vkCmdSetColorBlendEquationEXT = this.MTD_ADDRESS__vkCmdSetColorBlendEquationEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetColorBlendEquationEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetColorWriteMaskEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetColorWriteMaskEXT"));
            this.MTD__vkCmdSetColorWriteMaskEXT = this.MTD_ADDRESS__vkCmdSetColorWriteMaskEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetColorWriteMaskEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetTessellationDomainOriginEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetTessellationDomainOriginEXT"));
            this.MTD__vkCmdSetTessellationDomainOriginEXT = this.MTD_ADDRESS__vkCmdSetTessellationDomainOriginEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetTessellationDomainOriginEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetRasterizationStreamEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetRasterizationStreamEXT"));
            this.MTD__vkCmdSetRasterizationStreamEXT = this.MTD_ADDRESS__vkCmdSetRasterizationStreamEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetRasterizationStreamEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetConservativeRasterizationModeEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetConservativeRasterizationModeEXT"));
            this.MTD__vkCmdSetConservativeRasterizationModeEXT = this.MTD_ADDRESS__vkCmdSetConservativeRasterizationModeEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetConservativeRasterizationModeEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetExtraPrimitiveOverestimationSizeEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetExtraPrimitiveOverestimationSizeEXT"));
            this.MTD__vkCmdSetExtraPrimitiveOverestimationSizeEXT = this.MTD_ADDRESS__vkCmdSetExtraPrimitiveOverestimationSizeEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetExtraPrimitiveOverestimationSizeEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_FLOAT));
            this.MTD_ADDRESS__vkCmdSetDepthClipEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDepthClipEnableEXT"));
            this.MTD__vkCmdSetDepthClipEnableEXT = this.MTD_ADDRESS__vkCmdSetDepthClipEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDepthClipEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetSampleLocationsEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetSampleLocationsEnableEXT"));
            this.MTD__vkCmdSetSampleLocationsEnableEXT = this.MTD_ADDRESS__vkCmdSetSampleLocationsEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetSampleLocationsEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetColorBlendAdvancedEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetColorBlendAdvancedEXT"));
            this.MTD__vkCmdSetColorBlendAdvancedEXT = this.MTD_ADDRESS__vkCmdSetColorBlendAdvancedEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetColorBlendAdvancedEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetProvokingVertexModeEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetProvokingVertexModeEXT"));
            this.MTD__vkCmdSetProvokingVertexModeEXT = this.MTD_ADDRESS__vkCmdSetProvokingVertexModeEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetProvokingVertexModeEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetLineRasterizationModeEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetLineRasterizationModeEXT"));
            this.MTD__vkCmdSetLineRasterizationModeEXT = this.MTD_ADDRESS__vkCmdSetLineRasterizationModeEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetLineRasterizationModeEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetLineStippleEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetLineStippleEnableEXT"));
            this.MTD__vkCmdSetLineStippleEnableEXT = this.MTD_ADDRESS__vkCmdSetLineStippleEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetLineStippleEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetDepthClipNegativeOneToOneEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetDepthClipNegativeOneToOneEXT"));
            this.MTD__vkCmdSetDepthClipNegativeOneToOneEXT = this.MTD_ADDRESS__vkCmdSetDepthClipNegativeOneToOneEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetDepthClipNegativeOneToOneEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetViewportWScalingEnableNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetViewportWScalingEnableNV"));
            this.MTD__vkCmdSetViewportWScalingEnableNV = this.MTD_ADDRESS__vkCmdSetViewportWScalingEnableNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetViewportWScalingEnableNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetViewportSwizzleNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetViewportSwizzleNV"));
            this.MTD__vkCmdSetViewportSwizzleNV = this.MTD_ADDRESS__vkCmdSetViewportSwizzleNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetViewportSwizzleNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetCoverageToColorEnableNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetCoverageToColorEnableNV"));
            this.MTD__vkCmdSetCoverageToColorEnableNV = this.MTD_ADDRESS__vkCmdSetCoverageToColorEnableNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetCoverageToColorEnableNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetCoverageToColorLocationNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetCoverageToColorLocationNV"));
            this.MTD__vkCmdSetCoverageToColorLocationNV = this.MTD_ADDRESS__vkCmdSetCoverageToColorLocationNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetCoverageToColorLocationNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetCoverageModulationModeNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetCoverageModulationModeNV"));
            this.MTD__vkCmdSetCoverageModulationModeNV = this.MTD_ADDRESS__vkCmdSetCoverageModulationModeNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetCoverageModulationModeNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetCoverageModulationTableEnableNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetCoverageModulationTableEnableNV"));
            this.MTD__vkCmdSetCoverageModulationTableEnableNV = this.MTD_ADDRESS__vkCmdSetCoverageModulationTableEnableNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetCoverageModulationTableEnableNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetCoverageModulationTableNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetCoverageModulationTableNV"));
            this.MTD__vkCmdSetCoverageModulationTableNV = this.MTD_ADDRESS__vkCmdSetCoverageModulationTableNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetCoverageModulationTableNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetShadingRateImageEnableNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetShadingRateImageEnableNV"));
            this.MTD__vkCmdSetShadingRateImageEnableNV = this.MTD_ADDRESS__vkCmdSetShadingRateImageEnableNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetShadingRateImageEnableNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetRepresentativeFragmentTestEnableNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetRepresentativeFragmentTestEnableNV"));
            this.MTD__vkCmdSetRepresentativeFragmentTestEnableNV = this.MTD_ADDRESS__vkCmdSetRepresentativeFragmentTestEnableNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetRepresentativeFragmentTestEnableNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdSetCoverageReductionModeNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetCoverageReductionModeNV"));
            this.MTD__vkCmdSetCoverageReductionModeNV = this.MTD_ADDRESS__vkCmdSetCoverageReductionModeNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetCoverageReductionModeNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdOpticalFlowExecuteNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdOpticalFlowExecuteNV"));
            this.MTD__vkCmdOpticalFlowExecuteNV = this.MTD_ADDRESS__vkCmdOpticalFlowExecuteNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdOpticalFlowExecuteNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBindShadersEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBindShadersEXT"));
            this.MTD__vkCmdBindShadersEXT = this.MTD_ADDRESS__vkCmdBindShadersEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBindShadersEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkQueueNotifyOutOfBandNV = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkQueueNotifyOutOfBandNV"));
            this.MTD__vkQueueNotifyOutOfBandNV = this.MTD_ADDRESS__vkQueueNotifyOutOfBandNV.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkQueueNotifyOutOfBandNV, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdSetAttachmentFeedbackLoopEnableEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetAttachmentFeedbackLoopEnableEXT"));
            this.MTD__vkCmdSetAttachmentFeedbackLoopEnableEXT = this.MTD_ADDRESS__vkCmdSetAttachmentFeedbackLoopEnableEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetAttachmentFeedbackLoopEnableEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdBuildAccelerationStructuresKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBuildAccelerationStructuresKHR"));
            this.MTD__vkCmdBuildAccelerationStructuresKHR = this.MTD_ADDRESS__vkCmdBuildAccelerationStructuresKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBuildAccelerationStructuresKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdBuildAccelerationStructuresIndirectKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdBuildAccelerationStructuresIndirectKHR"));
            this.MTD__vkCmdBuildAccelerationStructuresIndirectKHR = this.MTD_ADDRESS__vkCmdBuildAccelerationStructuresIndirectKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdBuildAccelerationStructuresIndirectKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCopyAccelerationStructureKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyAccelerationStructureKHR"));
            this.MTD__vkCmdCopyAccelerationStructureKHR = this.MTD_ADDRESS__vkCmdCopyAccelerationStructureKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyAccelerationStructureKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCopyAccelerationStructureToMemoryKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyAccelerationStructureToMemoryKHR"));
            this.MTD__vkCmdCopyAccelerationStructureToMemoryKHR = this.MTD_ADDRESS__vkCmdCopyAccelerationStructureToMemoryKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyAccelerationStructureToMemoryKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdCopyMemoryToAccelerationStructureKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdCopyMemoryToAccelerationStructureKHR"));
            this.MTD__vkCmdCopyMemoryToAccelerationStructureKHR = this.MTD_ADDRESS__vkCmdCopyMemoryToAccelerationStructureKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdCopyMemoryToAccelerationStructureKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER));
            this.MTD_ADDRESS__vkCmdWriteAccelerationStructuresPropertiesKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdWriteAccelerationStructuresPropertiesKHR"));
            this.MTD__vkCmdWriteAccelerationStructuresPropertiesKHR = this.MTD_ADDRESS__vkCmdWriteAccelerationStructuresPropertiesKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdWriteAccelerationStructuresPropertiesKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdTraceRaysKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdTraceRaysKHR"));
            this.MTD__vkCmdTraceRaysKHR = this.MTD_ADDRESS__vkCmdTraceRaysKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdTraceRaysKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdTraceRaysIndirectKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdTraceRaysIndirectKHR"));
            this.MTD__vkCmdTraceRaysIndirectKHR = this.MTD_ADDRESS__vkCmdTraceRaysIndirectKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdTraceRaysIndirectKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG));
            this.MTD_ADDRESS__vkCmdSetRayTracingPipelineStackSizeKHR = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdSetRayTracingPipelineStackSizeKHR"));
            this.MTD__vkCmdSetRayTracingPipelineStackSizeKHR = this.MTD_ADDRESS__vkCmdSetRayTracingPipelineStackSizeKHR.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdSetRayTracingPipelineStackSizeKHR, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawMeshTasksEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawMeshTasksEXT"));
            this.MTD__vkCmdDrawMeshTasksEXT = this.MTD_ADDRESS__vkCmdDrawMeshTasksEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawMeshTasksEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawMeshTasksIndirectEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawMeshTasksIndirectEXT"));
            this.MTD__vkCmdDrawMeshTasksIndirectEXT = this.MTD_ADDRESS__vkCmdDrawMeshTasksIndirectEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawMeshTasksIndirectEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
            this.MTD_ADDRESS__vkCmdDrawMeshTasksIndirectCountEXT = vulkan.VulkanCore.vkGetDeviceProcAddr(this.handle, arena.allocateFrom("vkCmdDrawMeshTasksIndirectCountEXT"));
            this.MTD__vkCmdDrawMeshTasksIndirectCountEXT = this.MTD_ADDRESS__vkCmdDrawMeshTasksIndirectCountEXT.equals(java.lang.foreign.MemorySegment.NULL) ? null : jpgen.NativeTypes.SYSTEM_LINKER.downcallHandle(MTD_ADDRESS__vkCmdDrawMeshTasksIndirectCountEXT, java.lang.foreign.FunctionDescriptor.ofVoid(jpgen.NativeTypes.UNBOUNDED_POINTER, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, jpgen.NativeTypes.UNBOUNDED_POINTER, java.lang.foreign.ValueLayout.JAVA_LONG, java.lang.foreign.ValueLayout.JAVA_INT, java.lang.foreign.ValueLayout.JAVA_INT));
        }
    }

    public java.lang.foreign.MemorySegment handle() {return this.handle;}
}
